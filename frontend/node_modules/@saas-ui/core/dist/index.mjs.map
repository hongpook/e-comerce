{"version":3,"sources":["../src/command/command.tsx","../src/typography/br.tsx","../src/empty-state/empty-state.tsx","../src/error-boundary/error-boundary.tsx","../src/provider/saas-provider.tsx","../src/provider/use-link.tsx","../src/app-shell/app-shell.tsx","../src/app-shell/app-shell-context.ts","../src/sidebar/sidebar-utils.ts","../src/banner/banner.tsx","../src/banner/icons.tsx","../src/banner/banner-transition.tsx","../../../node_modules/@chakra-ui/transition/src/transition-utils.ts","../../../node_modules/@chakra-ui/transition/src/scale-fade.tsx","../../../node_modules/@chakra-ui/transition/src/slide-fade.tsx","../src/collapse/use-collapse.ts","../src/structured-list/list.tsx","../src/link/link.tsx","../src/loading-overlay/loading-overlay.tsx","../src/menu/overflow-menu.tsx","../src/menu/icons.tsx","../src/menu/context-menu.tsx","../src/persona/persona.tsx","../src/property/property.tsx","../src/navbar/use-navbar.ts","../../saas-ui-hooks/src/use-promise.tsx","../../saas-ui-hooks/src/use-local-storage.ts","../../saas-ui-hooks/src/use-steps.ts","../../saas-ui-hooks/src/use-script.ts","../../saas-ui-hooks/src/use-scroll-position.ts","../../../node_modules/@chakra-ui/react-context/src/index.ts","../src/navbar/navbar-context.ts","../src/navbar/navbar.tsx","../src/navbar/navbar-brand.tsx","../src/navbar/navbar-content.tsx","../src/navbar/navbar-item.tsx","../src/navbar/navbar-link.tsx","../src/sidebar/sidebar.tsx","../src/sidebar/use-sidebar.ts","../src/sidebar/sidebar-context.tsx","../src/sidebar/nav.tsx","../src/sidebar/nav-group.tsx","../src/sidebar/nav-context.tsx","../src/sidebar/nav-item.tsx","../src/search-input/search-input.tsx","../src/snackbar/use-snackbar.tsx","../src/snackbar/standalone.tsx","../src/stepper/steps.tsx","../src/stepper/use-stepper.tsx","../src/web3-address/address.tsx","../src/timeline/timeline.tsx","../src/icon-badge/icon-badge.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { chakra, Kbd, HTMLChakraProps, useStyleConfig } from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\n\nconst Key: React.FC<HTMLChakraProps<'span'>> = ({ children }) => {\n  if (typeof children !== 'string') {\n    return <>{children}</>\n  }\n\n  if (['then', 'or', '+'].includes(children)) {\n    return <chakra.span>{children}</chakra.span>\n  }\n\n  return <Kbd>{children}</Kbd>\n}\n\n/**\n * Command\n * A command is used to show which key or combination of keys performs a given action.\n *\n * All single letters A-Z are uppercase.\n * For non-letter keys such as enter, esc and shift, stick to lowercase.\n * Use symbols (⌥ ⇧ ⌃ ⌘) as opposed to spelling things out.\n */\nexport const Command: React.FC<HTMLChakraProps<'span'>> = (props) => {\n  const { children, className, ...rest } = props\n  if (typeof children !== 'string') {\n    return <>{children}</>\n  }\n  const keys = children.split(/\\s|\\+/)\n\n  const styles = useStyleConfig('SuiCommand')\n\n  const commandStyles = {\n    '& > *:not(style) ~ *:not(style)': { marginEnd: 1 },\n    color: 'muted',\n    ...styles,\n  }\n\n  return (\n    <chakra.span\n      className={cx('sui-command', className)}\n      __css={commandStyles}\n      {...rest}\n    >\n      {keys.map((key) => (\n        <Key key={key}>{key}</Key>\n      ))}\n    </chakra.span>\n  )\n}\n","import * as React from 'react'\nimport { chakra, HTMLChakraProps } from '@chakra-ui/react'\n\nexport const Br: React.FC<HTMLChakraProps<'span'>> = (props) => {\n  return (\n    <chakra.span {...props}>\n      <br />\n    </chakra.span>\n  )\n}\n","import * as React from 'react'\nimport {\n  forwardRef,\n  Icon,\n  chakra,\n  As,\n  ThemingProps,\n  omitThemingProps,\n  useMultiStyleConfig,\n  ButtonGroup,\n  IconProps,\n  SystemProps,\n  SystemStyleObject,\n  HTMLChakraProps,\n  TextProps,\n  ButtonGroupProps,\n  createStylesContext,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiEmptyState')\n\nexport const useEmptyStateStyles = useStyles\n\nexport interface EmptyStateProps\n  extends Omit<EmptyStateContainerProps, 'title'> {\n  title?: React.ReactNode\n  description?: React.ReactNode\n  icon?: As\n  actions?: React.ReactNode\n  footer?: React.ReactNode\n  children?: React.ReactNode\n  spacing?: SystemProps['margin']\n}\n/**\n * Display actionable feedback when no data is available.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/empty-state\n */\nexport const EmptyState: React.FC<EmptyStateProps> = (props) => {\n  const {\n    children,\n    spacing,\n    icon,\n    title,\n    description,\n    actions,\n    footer,\n    ...rest\n  } = props\n\n  return (\n    <EmptyStateContainer {...rest}>\n      <EmptyStateBody spacing={spacing}>\n        {icon && <EmptyStateIcon as={icon} />}\n        <chakra.div>\n          {title && <EmptyStateTitle>{title}</EmptyStateTitle>}\n          {description && (\n            <EmptyStateDescription>{description}</EmptyStateDescription>\n          )}\n        </chakra.div>\n        {children}\n\n        {actions && <EmptyStateActions>{actions}</EmptyStateActions>}\n        {footer && <EmptyStateFooter>{footer}</EmptyStateFooter>}\n      </EmptyStateBody>\n    </EmptyStateContainer>\n  )\n}\n\nEmptyState.displayName = 'EmptyState'\n\nexport interface EmptyStateContainerProps\n  extends HTMLChakraProps<'div'>,\n    ThemingProps<'SuiEmptyState'> {\n  children?: React.ReactNode\n  spacing?: SystemProps['margin']\n}\n\nexport const EmptyStateContainer: React.FC<EmptyStateContainerProps> = (\n  props\n) => {\n  const { children, spacing, ...rest } = props\n  const styles = useMultiStyleConfig('SuiEmptyState', props)\n\n  const containerProps = omitThemingProps(rest)\n\n  const containerStyles: SystemStyleObject = {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...styles.container,\n  }\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.div\n        {...containerProps}\n        __css={containerStyles}\n        className={cx('sui-empty-state', props.className)}\n      >\n        {children}\n      </chakra.div>\n    </StylesProvider>\n  )\n}\n\nEmptyStateContainer.displayName = 'EmptyStateContainer'\n\nexport const EmptyStateIcon = forwardRef<IconProps, typeof Icon>(\n  (props, ref) => {\n    const styles = useStyles()\n\n    const iconStyles: SystemStyleObject = {\n      boxSize: 10,\n      ...styles.icon,\n    }\n\n    return (\n      <Icon\n        ref={ref}\n        role=\"presentation\"\n        sx={iconStyles}\n        {...props}\n        className={cx('sui-empty-state__icon', props.className)}\n      />\n    )\n  }\n)\n\nEmptyStateIcon.displayName = 'EmptyStateIcon'\n\nexport interface EmptyStateTitleProps extends HTMLChakraProps<'h3'> {}\n\nexport const EmptyStateTitle: React.FC<EmptyStateTitleProps> = (props) => {\n  const styles = useStyles()\n\n  const titleStyles = {\n    mb: 1,\n    ...styles.title,\n  }\n\n  return (\n    <chakra.h3\n      __css={titleStyles}\n      {...props}\n      className={cx('sui-empty-state__title', props.className)}\n    />\n  )\n}\n\nEmptyStateTitle.displayName = 'EmptyStateTitle'\n\nexport const EmptyStateDescription: React.FC<TextProps> = (props) => {\n  const styles = useStyles()\n\n  const descriptionStyles: SystemStyleObject = {\n    color: 'muted',\n    fontSize: 'md',\n    ...styles.description,\n  }\n\n  return (\n    <chakra.p\n      __css={descriptionStyles}\n      {...props}\n      className={cx('sui-empty-state__description', props.className)}\n    />\n  )\n}\n\nEmptyStateDescription.displayName = 'EmptyStateDescription'\n\nexport interface EmptyStateBodyProps extends HTMLChakraProps<'div'> {\n  spacing?: SystemProps['margin']\n}\n\nexport const EmptyStateBody: React.FC<EmptyStateBodyProps> = (props) => {\n  const { spacing = 8, ...rest } = props\n  const styles = useStyles()\n\n  const bodyStyles: SystemStyleObject = {\n    ...styles.body,\n  }\n\n  return (\n    <chakra.div\n      __css={bodyStyles}\n      {...rest}\n      className={cx('sui-empty-state__body', props.className)}\n    />\n  )\n}\n\nEmptyStateBody.displayName = 'EmptyStateBody'\n\nexport const EmptyStateActions: React.FC<ButtonGroupProps> = (props) => {\n  const styles = useStyles()\n  return (\n    <ButtonGroup\n      sx={styles.actions}\n      {...props}\n      className={cx('sui-empty-state__actions', props.className)}\n    />\n  )\n}\n\nEmptyStateActions.displayName = 'EmptyStateActions'\n\nexport const EmptyStateFooter: React.FC<HTMLChakraProps<'footer'>> = (\n  props\n) => {\n  const styles = useStyles()\n  return (\n    <chakra.footer\n      __css={styles.footer}\n      {...props}\n      className={cx('sui-empty-state__footer', props.className)}\n    />\n  )\n}\n\nEmptyStateFooter.displayName = 'EmptyStateFooter'\n","import * as React from 'react'\n\nimport { SaasContext } from '../provider'\n\nexport interface ErrorBoundaryProps {\n  fallback?: React.ReactNode\n  children: React.ReactNode\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\nexport interface ErrorBoundaryState {\n  error?: Error | null\n  errorInfo?: any\n}\n/**\n * A container component that catches errors and displays a fallback UI.\n *\n * @see Docs https://saas-ui.dev/docs/components/utils/error-boundary\n */\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps> {\n  state: ErrorBoundaryState\n\n  static contextType = SaasContext\n\n  declare context: React.ContextType<typeof SaasContext>\n\n  constructor(props: ErrorBoundaryProps) {\n    super(props)\n    this.state = { error: null }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { error }\n  }\n\n  onError = (error: Error, errorInfo: any) => {\n    this.props.onError?.(error, errorInfo)\n    this.context.onError?.(error, errorInfo)\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    this.onError(error, errorInfo)\n  }\n\n  render() {\n    if (this.state.error) {\n      return this.props.fallback || <h1>Something went wrong.</h1>\n    }\n\n    return this.props.children\n  }\n}\n","import * as React from 'react'\n\nimport { ChakraProvider, ChakraProviderProps } from '@chakra-ui/react'\n\nimport { theme as defaultTheme } from '@saas-ui/theme'\nimport { Dict } from '@chakra-ui/utils'\n\nexport interface SaasContextValue {\n  linkComponent?: React.ElementType<any>\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\nexport const SaasContext = React.createContext<SaasContextValue>({})\n\nexport interface SaasProviderProps extends ChakraProviderProps {\n  theme?: Dict\n  linkComponent?: React.ElementType<any>\n  children: React.ReactNode\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void\n}\n\nexport function SaasProvider(props: SaasProviderProps) {\n  const { theme, linkComponent, onError, children, ...rest } = props\n\n  const context = {\n    linkComponent,\n    onError,\n  }\n\n  return (\n    <SaasContext.Provider value={context}>\n      <ChakraProvider {...rest} theme={theme || defaultTheme}>\n        {children}\n      </ChakraProvider>\n    </SaasContext.Provider>\n  )\n}\n\nexport const useSaas = (): SaasContextValue => React.useContext(SaasContext)\n","import React from 'react'\nimport { chakra } from '@chakra-ui/react'\nimport { useSaas } from './saas-provider'\n\nconst Link: React.FC<any> = (props) => <chakra.a {...props} />\n\nexport function useLink(): React.ElementType<any> {\n  const context = useSaas()\n  if (context?.linkComponent) {\n    return context.linkComponent\n  }\n  return Link\n}\n","import * as React from 'react'\n\nimport {\n  Flex,\n  createStylesContext,\n  HTMLChakraProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  omitThemingProps,\n  SystemStyleObject,\n  forwardRef,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\nimport { AppShellProvider, useAppShell } from './app-shell-context'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiAppShell')\n\nexport interface AppShellProps\n  extends HTMLChakraProps<'div'>,\n    ThemingProps<'SuiAppShell'> {\n  /**\n   * The top header navigation\n   */\n  navbar?: React.ReactNode\n  /**\n   * Main sidebar, positioned on the left\n   */\n  sidebar?: React.ReactElement\n  /**\n   * Secondary sidebar, positioned on the right\n   */\n  aside?: React.ReactNode\n  /**\n   * The footer\n   */\n  footer?: React.ReactNode\n  /**\n   * The main content\n   */\n  children: React.ReactNode\n  mainRef?: React.RefObject<HTMLDivElement>\n}\n\n/**\n * The App Shell defines the main structure of your app.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/app-shell\n */\nexport const AppShell = forwardRef<AppShellProps, 'div'>((props, ref) => {\n  const styles = useMultiStyleConfig('SuiAppShell', props) as Record<\n    string,\n    SystemStyleObject\n  >\n\n  const {\n    navbar,\n    sidebar,\n    aside,\n    footer,\n    children,\n    mainRef,\n    ...containerProps\n  } = omitThemingProps(props)\n\n  const containerStyles: SystemStyleObject = {\n    flexDirection: 'column',\n    ...styles.container,\n  }\n\n  const innerStyles: SystemStyleObject = {\n    flex: 1,\n    minHeight: 0, // make sure child flex divs get correct height.\n    minWidth: 0, // make sure child flex divs get correct width.\n    ...styles.inner,\n  }\n\n  const mainStyles: SystemStyleObject = {\n    flex: 1,\n    flexDirection: 'column',\n    minWidth: 0, // make sure child flex divs get correct width.\n    ...styles.main,\n  }\n\n  const isSidebar =\n    React.isValidElement(sidebar) && (sidebar as any).type.id === 'Sidebar'\n\n  const context = useAppShell({\n    toggleBreakpoint: isSidebar\n      ? (sidebar as any)?.props.toggleBreakpoint\n      : undefined,\n  })\n\n  return (\n    <AppShellProvider value={context}>\n      <StylesProvider value={styles}>\n        <Flex\n          ref={ref}\n          {...containerProps}\n          sx={containerStyles}\n          className={cx('sui-app-shell', props.className)}\n        >\n          {navbar}\n          <Flex sx={innerStyles} className=\"saas-app-shell__inner\">\n            {sidebar}\n            <Flex\n              ref={mainRef}\n              sx={mainStyles}\n              className=\"saas-app-shell__main\"\n            >\n              {children}\n            </Flex>\n            {aside}\n          </Flex>\n          {footer}\n        </Flex>\n      </StylesProvider>\n    </AppShellProvider>\n  )\n})\n\nAppShell.displayName = 'AppShell'\n","import * as React from 'react'\nimport { createContext } from '@chakra-ui/react-utils'\nimport { useBreakpointValue, useDisclosure } from '@chakra-ui/react'\nimport { Breakpoints, getBreakpoints } from '../sidebar/sidebar-utils'\n\nexport const [AppShellProvider, useAppShellContext] = createContext<\n  ReturnType<typeof useAppShell>\n>({\n  strict: false,\n  errorMessage: 'AppShell context not available.',\n})\n\nexport interface UseAppShellProps {\n  toggleBreakpoint?: Breakpoints\n}\n\nexport const useAppShell = (props: UseAppShellProps) => {\n  const disclosure = useDisclosure()\n\n  const breakpoints = getBreakpoints(props.toggleBreakpoint)\n\n  const isMobile = useBreakpointValue(breakpoints, {\n    fallback: props.toggleBreakpoint || 'lg',\n  })\n\n  return {\n    isSidebarOpen: disclosure.isOpen,\n    closeSidebar: disclosure.onClose,\n    openSidebar: disclosure.onOpen,\n    toggleSidebar: disclosure.onToggle,\n    isMobile,\n  }\n}\n","export type Breakpoints = false | 'base' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'\nexport const getBreakpoints = (breakpoint: Breakpoints = 'lg') => {\n  return breakpoint\n    ? {\n        base: true,\n        [breakpoint]: false,\n      }\n    : { base: false }\n}\n","import * as React from 'react'\nimport {\n  CloseButton,\n  CloseButtonProps,\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ButtonGroup,\n  ButtonGroupProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n  As,\n  createStylesContext,\n  useId,\n  ComponentWithAs,\n  Icon,\n} from '@chakra-ui/react'\nimport { callAllHandlers, cx } from '@chakra-ui/utils'\n\nimport { createContext } from '@chakra-ui/react-utils'\n\nimport { InfoIcon, WarningIcon, CheckIcon } from './icons'\n\nimport { AnimatePresence } from 'framer-motion'\n\nimport {\n  BannerTransition,\n  BannerTransitionProps,\n  BannerMotion,\n} from './banner-transition'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiBanner')\n\nconst STATUSES = {\n  info: { icon: InfoIcon, colorScheme: 'blue' },\n  warning: { icon: WarningIcon, colorScheme: 'orange' },\n  success: { icon: CheckIcon, colorScheme: 'green' },\n  error: { icon: WarningIcon, colorScheme: 'red' },\n}\n\nexport type BannerStatus = keyof typeof STATUSES\n\ninterface BannerOptions {\n  /**\n   * The status of the banner.\n   */\n  status?: BannerStatus\n  /**\n   * Show or hide the banner.\n   */\n  isOpen?: boolean\n  /**\n   * Callback fired when the close button is clicked.\n   */\n  onClose?: () => void\n  /**\n   * Customize the close animation.\n   * @default 'slideOutTop'\n   * @type 'slideOutTop', 'slideOutBottom', 'fade', 'scale', 'none'\n   */\n  motionPreset?: BannerMotion\n}\n\ninterface BannerContext extends BannerOptions {\n  id: string\n  status: BannerStatus\n}\n\nconst [BannerProvider, useBannerContext] = createContext<BannerContext>({\n  name: 'BannerContext',\n  errorMessage:\n    'useBannerContext: `context` is undefined. Seems you forgot to wrap banner components in `<Banner />`',\n})\n\nexport interface BannerProps\n  extends Omit<BannerTransitionProps, 'motionPreset'>,\n    BannerOptions,\n    ThemingProps<'SuiBanner'> {}\n\n/**\n * Banner is used to communicate the state or status of a\n * page, feature or action\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const Banner = forwardRef<BannerProps, 'div'>((props, ref) => {\n  const {\n    id,\n    status = 'info',\n    isOpen = true,\n    onClose,\n    motionPreset = 'slideOutTop',\n    ...rest\n  } = omitThemingProps(props)\n  const colorScheme = props.colorScheme ?? STATUSES[status].colorScheme\n\n  const styles = useMultiStyleConfig('SuiBanner', {\n    ...props,\n    colorScheme,\n  })\n\n  const containerStyles: SystemStyleObject = {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    position: 'relative',\n    overflow: 'hidden',\n    ...styles.container,\n  }\n\n  const context = {\n    id: id || `banner-${useId()}`,\n    status,\n    onClose,\n    isOpen,\n  }\n\n  const role = ['warning', 'error'].includes(status) ? 'alert' : 'status'\n\n  const animate = isOpen ? 'enter' : 'exit'\n\n  return (\n    <BannerProvider value={context}>\n      <StylesProvider value={styles}>\n        <AnimatePresence>\n          {isOpen && (\n            <BannerTransition\n              id={context.id}\n              role={role}\n              ref={ref}\n              motionPreset={motionPreset}\n              animate={animate}\n              {...rest}\n              className={cx('sui-banner', props.className)}\n              __css={containerStyles}\n            />\n          )}\n        </AnimatePresence>\n      </StylesProvider>\n    </BannerProvider>\n  )\n})\n\nBanner.displayName = 'Banner'\n\nexport interface BannerContentProps extends HTMLChakraProps<'div'> {}\n\n/**\n * The wrapper for the banner title and description.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerContent = forwardRef<BannerContentProps, 'div'>(\n  (props, ref) => {\n    const styles = useStyles()\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...props}\n        className={cx('sui-banner__content', props.className)}\n        __css={styles.content}\n      />\n    )\n  }\n)\n\nBannerContent.displayName = 'BannerContent'\n\nexport interface BannerDescriptionProps extends HTMLChakraProps<'div'> {}\n\nexport interface BannerTitleProps extends HTMLChakraProps<'div'> {}\n\n/**\n * The title of the banner to be announced by screen readers.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerTitle = forwardRef<BannerTitleProps, 'div'>((props, ref) => {\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      ref={ref}\n      {...props}\n      className={cx('sui-banner__title', props.className)}\n      __css={styles.title}\n    />\n  )\n})\n\nBannerTitle.displayName = 'BannerTitle'\n\nexport interface BannerDescriptionProps extends HTMLChakraProps<'div'> {}\n\n/**\n * The description of the banner to be announced by screen readers.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerDescription = forwardRef<BannerDescriptionProps, 'div'>(\n  (props, ref) => {\n    const styles = useStyles()\n    const descriptionStyles: SystemStyleObject = {\n      display: 'inline',\n      ...styles.description,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...props}\n        className={cx('sui-banner__desc', props.className)}\n        __css={descriptionStyles}\n      />\n    )\n  }\n)\n\nBannerDescription.displayName = 'BannerDescription'\n\nexport interface BannerActionsProps\n  extends HTMLChakraProps<'div'>,\n    ButtonGroupProps {}\n\n/**\n * The banner actions, renders a ButtonGroup.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerActions = forwardRef<BannerActionsProps, 'div'>(\n  (props, ref) => {\n    const { children, variant } = props\n    const styles = useStyles()\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...props}\n        className={cx('sui-banner__actions', props.className)}\n        __css={styles.actions}\n      >\n        <ButtonGroup variant={variant}>{children}</ButtonGroup>\n      </chakra.div>\n    )\n  }\n)\n\nBannerActions.displayName = 'BannerActions'\n\nexport interface BannerIconProps extends HTMLChakraProps<'span'> {\n  icon?: As\n}\n\n/**\n * The visual icon for the banner.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerIcon: React.FC<BannerIconProps> = (props) => {\n  const { status } = useBannerContext()\n  const { icon, ...rest } = props\n  const { icon: statusIcon } = STATUSES[status]\n  const styles = useStyles()\n\n  return (\n    <chakra.span\n      display=\"inherit\"\n      {...rest}\n      className={cx('sui-banner__icon', props.className)}\n      __css={styles.icon}\n    >\n      <Icon as={icon || statusIcon} w=\"100%\" h=\"100%\" />\n    </chakra.span>\n  )\n}\n\nBannerIcon.displayName = 'BannerIcon'\n\n/**\n * The close button.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/banner\n */\nexport const BannerCloseButton = forwardRef<CloseButtonProps, 'button'>(\n  (props, ref) => {\n    const { onClick, className, ...rest } = props\n    const { onClose, isOpen, id } = useBannerContext()\n\n    const _className = cx('sui-banner__close-btn', className)\n\n    const styles = useStyles()\n\n    return (\n      <CloseButton\n        ref={ref}\n        __css={styles.closeButton}\n        className={_className}\n        onClick={callAllHandlers(onClick, (event) => {\n          event.stopPropagation()\n          onClose?.()\n        })}\n        aria-controls={id}\n        aria-expanded={isOpen?.toString() ? 'true' : 'false'}\n        {...rest}\n      />\n    )\n  }\n)\n\nBannerCloseButton.displayName = 'BannerCloseButton'\n","import { Icon, IconProps } from '@chakra-ui/react'\n\nexport function CheckIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z\"\n      />\n    </Icon>\n  )\n}\n\nexport function InfoIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z\"\n      />\n    </Icon>\n  )\n}\n\nexport function WarningIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n      />\n    </Icon>\n  )\n}\n","import * as React from 'react'\nimport { chakra, ChakraProps } from '@chakra-ui/system'\nimport {\n  scaleFadeConfig,\n  slideFadeConfig,\n  EASINGS,\n} from '@chakra-ui/transition'\nimport { HTMLMotionProps, motion } from 'framer-motion'\n\nexport type BannerMotion =\n  | 'slideOutTop'\n  | 'slideOutBottom'\n  | 'fade'\n  | 'scale'\n  | 'none'\n\nexport interface BannerTransitionProps\n  extends Omit<HTMLMotionProps<'div'>, 'color' | 'transition'>,\n    ChakraProps {\n  motionPreset: BannerMotion\n}\n\nconst defaultTransition = {\n  enter: {\n    duration: 0.2,\n    ease: EASINGS.easeOut,\n  },\n  exit: {\n    duration: 0.2,\n    ease: EASINGS.easeIn,\n  },\n}\n\nconst transitions = {\n  slideOutTop: {\n    ...slideFadeConfig,\n    custom: {\n      offsetY: '-100%',\n      reverse: true,\n      transition: defaultTransition,\n    },\n    initial: 'enter',\n  },\n  slideOutBottom: {\n    ...slideFadeConfig,\n    custom: {\n      offsetY: '100%',\n      reverse: true,\n      transition: defaultTransition,\n    },\n    initial: 'enter',\n  },\n  fade: {\n    ...slideFadeConfig,\n    custom: {\n      transition: defaultTransition,\n    },\n    initial: 'enter',\n  },\n  scale: {\n    ...scaleFadeConfig,\n    custom: { initialScale: 0.1, reverse: true, transition: defaultTransition },\n    initial: 'enter',\n  },\n  none: {\n    custom: {},\n  },\n}\n\nconst Motion = chakra(motion.div)\n\nexport const BannerTransition = React.forwardRef(\n  (props: BannerTransitionProps, ref: React.Ref<any>) => {\n    const { motionPreset, ...rest } = props\n\n    const preset = transitions[motionPreset]\n\n    const motionProps = {\n      ...preset,\n    }\n\n    return <Motion ref={ref} {...(motionProps as ChakraProps)} {...rest} />\n  }\n)\n","import type { Target, TargetAndTransition, Transition } from \"framer-motion\"\n\nexport type TransitionProperties = {\n  /**\n   * Custom `transition` definition for `enter` and `exit`\n   */\n  transition?: TransitionConfig\n  /**\n   * Custom `transitionEnd` definition for `enter` and `exit`\n   */\n  transitionEnd?: TransitionEndConfig\n  /**\n   * Custom `delay` definition for `enter` and `exit`\n   */\n  delay?: number | DelayConfig\n}\n\ntype TargetResolver<P = {}> = (\n  props: P & TransitionProperties,\n) => TargetAndTransition\n\ntype Variant<P = {}> = TargetAndTransition | TargetResolver<P>\n\nexport type Variants<P = {}> = {\n  enter: Variant<P>\n  exit: Variant<P>\n  initial?: Variant<P>\n}\n\ntype WithMotionState<P> = Partial<Record<\"enter\" | \"exit\", P>>\n\nexport type TransitionConfig = WithMotionState<Transition>\n\nexport type TransitionEndConfig = WithMotionState<Target>\n\nexport type DelayConfig = WithMotionState<number>\n\nexport const TRANSITION_EASINGS = {\n  ease: [0.25, 0.1, 0.25, 1],\n  easeIn: [0.4, 0, 1, 1],\n  easeOut: [0, 0, 0.2, 1],\n  easeInOut: [0.4, 0, 0.2, 1],\n} as const\n\nexport const TRANSITION_VARIANTS = {\n  scale: {\n    enter: { scale: 1 },\n    exit: { scale: 0.95 },\n  },\n  fade: {\n    enter: { opacity: 1 },\n    exit: { opacity: 0 },\n  },\n  pushLeft: {\n    enter: { x: \"100%\" },\n    exit: { x: \"-30%\" },\n  },\n  pushRight: {\n    enter: { x: \"-100%\" },\n    exit: { x: \"30%\" },\n  },\n  pushUp: {\n    enter: { y: \"100%\" },\n    exit: { y: \"-30%\" },\n  },\n  pushDown: {\n    enter: { y: \"-100%\" },\n    exit: { y: \"30%\" },\n  },\n  slideLeft: {\n    position: { left: 0, top: 0, bottom: 0, width: \"100%\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: \"-100%\", y: 0 },\n  },\n  slideRight: {\n    position: { right: 0, top: 0, bottom: 0, width: \"100%\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: \"100%\", y: 0 },\n  },\n  slideUp: {\n    position: { top: 0, left: 0, right: 0, maxWidth: \"100vw\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: 0, y: \"-100%\" },\n  },\n  slideDown: {\n    position: { bottom: 0, left: 0, right: 0, maxWidth: \"100vw\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: 0, y: \"100%\" },\n  },\n}\n\nexport type SlideDirection = \"top\" | \"left\" | \"bottom\" | \"right\"\n\nexport function getSlideTransition(options?: { direction?: SlideDirection }) {\n  const side = options?.direction ?? \"right\"\n  switch (side) {\n    case \"right\":\n      return TRANSITION_VARIANTS.slideRight\n    case \"left\":\n      return TRANSITION_VARIANTS.slideLeft\n    case \"bottom\":\n      return TRANSITION_VARIANTS.slideDown\n    case \"top\":\n      return TRANSITION_VARIANTS.slideUp\n    default:\n      return TRANSITION_VARIANTS.slideRight\n  }\n}\n\nexport const TRANSITION_DEFAULTS = {\n  enter: {\n    duration: 0.2,\n    ease: TRANSITION_EASINGS.easeOut,\n  },\n  exit: {\n    duration: 0.1,\n    ease: TRANSITION_EASINGS.easeIn,\n  },\n} as const\n\nexport type WithTransitionConfig<P extends object> = Omit<P, \"transition\"> &\n  TransitionProperties & {\n    /**\n     * If `true`, the element will unmount when `in={false}` and animation is done\n     */\n    unmountOnExit?: boolean\n    /**\n     * Show the component; triggers when enter or exit states\n     */\n    in?: boolean\n  }\n\nexport const withDelay = {\n  enter: (\n    transition: Transition,\n    delay?: number | DelayConfig,\n  ): Transition & { delay: number | undefined } => ({\n    ...transition,\n    delay: typeof delay === \"number\" ? delay : delay?.[\"enter\"],\n  }),\n  exit: (\n    transition: Transition,\n    delay?: number | DelayConfig,\n  ): Transition & { delay: number | undefined } => ({\n    ...transition,\n    delay: typeof delay === \"number\" ? delay : delay?.[\"exit\"],\n  }),\n}\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  TRANSITION_DEFAULTS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface ScaleFadeOptions {\n  /**\n   * The initial scale of the element\n   * @default 0.95\n   */\n  initialScale?: number\n  /**\n   * If `true`, the element will transition back to exit state\n   * @default true\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<ScaleFadeOptions> = {\n  exit: ({ reverse, initialScale, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    ...(reverse\n      ? { scale: initialScale, transitionEnd: transitionEnd?.exit }\n      : { transitionEnd: { scale: initialScale, ...transitionEnd?.exit } }),\n    transition:\n      transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n  }),\n  enter: ({ transitionEnd, transition, delay }) => ({\n    opacity: 1,\n    scale: 1,\n    transition:\n      transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n}\n\nexport const scaleFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface ScaleFadeProps\n  extends ScaleFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const ScaleFade = forwardRef<HTMLDivElement, ScaleFadeProps>(\n  function ScaleFade(props, ref) {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { initialScale, reverse, transition, transitionEnd, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            {...scaleFadeConfig}\n            animate={animate}\n            custom={custom}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nScaleFade.displayName = \"ScaleFade\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  TRANSITION_DEFAULTS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface SlideFadeOptions {\n  /**\n   * The offset on the horizontal or `x` axis\n   * @default 0\n   */\n  offsetX?: string | number\n  /**\n   * The offset on the vertical or `y` axis\n   * @default 8\n   */\n  offsetY?: string | number\n  /**\n   * If `true`, the element will be transitioned back to the offset when it leaves.\n   * Otherwise, it'll only fade out\n   * @default true\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<SlideFadeOptions> = {\n  initial: ({ offsetX, offsetY, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    x: offsetX,\n    y: offsetY,\n    transition:\n      transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n    transitionEnd: transitionEnd?.exit,\n  }),\n  enter: ({ transition, transitionEnd, delay }) => ({\n    opacity: 1,\n    x: 0,\n    y: 0,\n    transition:\n      transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n  exit: ({ offsetY, offsetX, transition, transitionEnd, reverse, delay }) => {\n    const offset = { x: offsetX, y: offsetY }\n    return {\n      opacity: 0,\n      transition:\n        transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      ...(reverse\n        ? { ...offset, transitionEnd: transitionEnd?.exit }\n        : { transitionEnd: { ...offset, ...transitionEnd?.exit } }),\n    }\n  },\n}\n\nexport const slideFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface SlideFadeProps\n  extends SlideFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const SlideFade = forwardRef<HTMLDivElement, SlideFadeProps>(\n  function SlideFade(props, ref) {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      className,\n      offsetX = 0,\n      offsetY = 8,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = {\n      offsetX,\n      offsetY,\n      reverse,\n      transition,\n      transitionEnd,\n      delay,\n    }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            custom={custom}\n            {...slideFadeConfig}\n            animate={animate}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nSlideFade.displayName = \"SlideFade\"\n","import * as React from 'react'\nimport { createContext, PropGetter } from '@chakra-ui/react-utils'\nimport { useDisclosure, useId } from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\n\nexport const [CollapseProvider, useCollapseContext] =\n  createContext<UseCollapseReturn>({\n    name: 'UseCollapseReturn',\n  })\n\nexport interface UseCollapse {\n  defaultIsOpen?: boolean\n  isOpen?: boolean\n  onOpen?: () => void\n  onClose?: () => void\n  isCollapsible?: boolean\n}\n\nexport const useCollapse = (props: UseCollapse = {}) => {\n  const { isCollapsible = true, ...rest } = props\n\n  const id = `collapse-${useId()}`\n\n  const { isOpen, onToggle, onOpen, onClose } = useDisclosure(rest)\n\n  const getToggleProps: PropGetter = React.useCallback(\n    (props = {}) => {\n      const { className, ...rest } = props\n      if (isCollapsible) {\n        return {\n          className: cx('sui-collapse-toggle', className),\n          onClick: () => onToggle(),\n          'aria-expanded': isOpen.toString(),\n          'aria-controls': id,\n          ...rest,\n        }\n      }\n      return {}\n    },\n    [isCollapsible, isOpen]\n  )\n\n  const getCollapseProps = React.useCallback(\n    (props: any = {}) => {\n      return {\n        id,\n        in: isOpen,\n        ...props,\n      }\n    },\n    [isOpen]\n  )\n\n  return {\n    isCollapsible,\n    isOpen,\n    getToggleProps,\n    getCollapseProps,\n    onToggle,\n    onOpen,\n    onClose,\n  }\n}\n\nexport interface UseCollapseReturn extends ReturnType<typeof useCollapse> {}\n","import * as React from 'react'\n\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  omitThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  As,\n  useMultiStyleConfig,\n  createStylesContext,\n  Icon,\n  useId,\n  useMergeRefs,\n} from '@chakra-ui/react'\n\nimport { callAllHandlers, cx, dataAttr } from '@chakra-ui/utils'\nimport { createContext } from '@chakra-ui/react-utils'\n\nimport { nextById, prevById, queryAll } from '@zag-js/dom-utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiStructuredList')\n\ninterface StructuredListContext {\n  id: string\n  containerRef: React.RefObject<HTMLUListElement>\n  focusId: string | null\n  setFocusId: React.Dispatch<React.SetStateAction<string | null>>\n}\n\nconst [StructuredListProvider, useStructuredListContext] =\n  createContext<StructuredListContext>({\n    name: 'StructuredListContext',\n    errorMessage:\n      'useStructuredListContext: `context` is undefined. Seems you forgot to wrap the components in `<StructuredList />`',\n  })\n\nfunction queryAllItems(root: HTMLElement | null) {\n  return queryAll(root, `[role='button']:not([disabled])`)\n}\n\nconst useStructuredList = (props: StructuredListProps) => {\n  const id = useId()\n\n  const ref = React.useRef<HTMLUListElement>(null)\n\n  const [focusId, setFocusId] = React.useState<string | null>(null)\n\n  const listProps: StructuredListProps = {\n    onBlur: callAllHandlers(props.onBlur, (e) => {\n      if (e.relatedTarget) {\n        const items = queryAllItems(ref.current)\n        if (!items.includes(e.relatedTarget as HTMLElement)) {\n          setFocusId(null)\n        }\n      }\n    }),\n  }\n\n  return {\n    id: props.id ?? id,\n    containerRef: ref,\n    focusId,\n    setFocusId,\n    listProps,\n  }\n}\n\ninterface StructuredListOptions {\n  /**\n   * An array of list items\n   */\n  items?: Array<StructuredListItemProps>\n}\n\nexport interface StructuredListProps\n  extends StructuredListOptions,\n    HTMLChakraProps<'ul'>,\n    ThemingProps<'SuiStructuredList'> {}\n\n/**\n * React component to render lists of data\n */\nexport const StructuredList = forwardRef<StructuredListProps, 'ul'>(\n  (props, ref) => {\n    const { items, children, ...rest } = props\n\n    const styles = useMultiStyleConfig('SuiStructuredList', rest)\n\n    const ownProps = omitThemingProps(rest)\n\n    let content\n    if (items) {\n      content = items.map((item: any, i: number) => {\n        return <StructuredListItem {...item} key={item.id || i} />\n      })\n    } else {\n      content = children\n    }\n\n    const listStyles: SystemStyleObject = {\n      py: 2,\n      position: 'relative',\n      ...styles.list,\n    }\n\n    const { listProps, ...context } = useStructuredList(props)\n\n    return (\n      <StructuredListProvider value={context}>\n        <StylesProvider value={styles}>\n          <chakra.ul\n            ref={useMergeRefs(ref, context.containerRef)}\n            __css={listStyles}\n            {...ownProps}\n            {...listProps}\n            className={cx('sui-list', props.className)}\n          >\n            {content}\n          </chakra.ul>\n        </StylesProvider>\n      </StructuredListProvider>\n    )\n  }\n)\n\nStructuredList.displayName = 'StructuredList'\n\nexport interface StructuredListHeaderProps extends HTMLChakraProps<'li'> {\n  /**\n   * Action rendered next to the title\n   */\n  action?: React.ReactNode\n  /**\n   * The aria-level\n   */\n  level?: number\n}\n\nexport const StructuredListHeader = forwardRef<StructuredListHeaderProps, 'li'>(\n  (props, ref) => {\n    const {\n      children,\n      onClick,\n      action,\n      role = 'heading',\n      level = 1,\n      ...rest\n    } = props\n    const styles = useStyles()\n\n    return (\n      <chakra.li\n        ref={ref}\n        __css={styles.header}\n        onClick={onClick}\n        {...rest}\n        className={cx('sui-list__header', props.className)}\n      >\n        <chakra.span flex=\"1\" userSelect=\"none\" role={role} aria-level={level}>\n          {children}\n        </chakra.span>\n        {action}\n      </chakra.li>\n    )\n  }\n)\n\nStructuredListHeader.displayName = 'StructuredListHeader'\n\nexport interface StructuredListItemProps extends HTMLChakraProps<'li'> {\n  onClick?: (e: React.MouseEvent) => void\n  href?: string | object\n  isDisabled?: boolean\n}\n\n/**\n * Adding `onClick` or `href` props will wrap the content in a `StructuredListButton`\n */\nexport const StructuredListItem = forwardRef<StructuredListItemProps, 'li'>(\n  (props, ref) => {\n    const { onClick, href, as, children, isDisabled, ...rest } = props\n\n    const styles = useStyles()\n\n    const isButton = !!(onClick || href)\n\n    const ContentWrapper = isButton ? StructuredListButton : React.Fragment\n    const disablePadding = !!isButton\n\n    const itemStyles: SystemStyleObject = {\n      ...styles.item,\n      ...(disablePadding ? { py: 0, px: 0 } : {}),\n    }\n\n    const wrapperProps = isButton\n      ? {\n          onClick,\n          href,\n          as,\n          isDisabled,\n        }\n      : {}\n\n    const content = isButton ? (\n      <ContentWrapper {...wrapperProps}>{children}</ContentWrapper>\n    ) : (\n      children\n    )\n\n    return (\n      <chakra.li\n        ref={ref}\n        __css={itemStyles}\n        {...rest}\n        className={cx('sui-list__item', props.className)}\n      >\n        {content}\n      </chakra.li>\n    )\n  }\n)\n\nStructuredListItem.displayName = 'StructuredListItem'\n\nconst useStructuredListButton = (props: StructuredListButtonProps) => {\n  const {\n    id: containerId,\n    containerRef,\n    focusId,\n    setFocusId,\n  } = useStructuredListContext()\n\n  const id = `${containerId}-${useId()}`\n  const buttonId = props.id ?? id\n\n  const isFocused = focusId === buttonId\n\n  function getItems() {\n    return queryAll(\n      containerRef.current,\n      `.sui-list__item-button:not([aria-disabled=true])`\n    )\n  }\n\n  const buttonProps = {\n    id: buttonId,\n    ['data-focus']: dataAttr(isFocused),\n    ['aria-disabled']: props.isDisabled ? 'true' : undefined,\n    tabIndex: props.isDisabled ? -1 : 0,\n    onFocus: callAllHandlers(props.onFocus, () => {\n      setFocusId(buttonId)\n    }),\n    onKeyDown: callAllHandlers(\n      props.onKeyDown,\n      React.useCallback(\n        (e: React.KeyboardEvent) => {\n          const items = getItems()\n\n          const keyMap: Record<string, React.KeyboardEventHandler> = {\n            ArrowUp: () => {\n              prevById(items, buttonId)?.focus()\n            },\n            ArrowDown: () => {\n              nextById(items, buttonId)?.focus()\n            },\n            Home: () => {\n              items[0]?.focus()\n            },\n            End: () => {\n              items[items.length - 1]?.focus()\n            },\n          }\n\n          if (keyMap[e.key]) {\n            e.preventDefault()\n            keyMap[e.key](e)\n          }\n        },\n        [buttonId]\n      )\n    ),\n    onClick: (e: React.MouseEvent) => {\n      if (props.isDisabled) {\n        e.preventDefault()\n        e.stopPropagation()\n        return\n      }\n\n      props.onClick?.(e)\n    },\n  }\n\n  return {\n    buttonProps,\n  }\n}\n\nexport interface StructuredListButtonProps extends HTMLChakraProps<'div'> {\n  onClick?: (e: React.MouseEvent) => void\n  as?: As\n  isDisabled?: boolean\n}\n\n/**\n * Behaves like a button by default.\n * Use the 'as' prop to render a link.\n *\n * <StructuredListItemButton as=\"a\" href=\"/page\" />\n *\n * or\n *\n * <StructuredListItemButton as={Link} href={{path: '/page}} />\n */\nexport const StructuredListButton = forwardRef<\n  StructuredListButtonProps,\n  'div'\n>((props, ref) => {\n  const { children, isDisabled, ...rest } = props\n\n  const { buttonProps } = useStructuredListButton(props)\n\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={styles.button}\n      role=\"button\"\n      {...rest}\n      {...buttonProps}\n      className={cx('sui-list__item-button', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n})\n\nStructuredListButton.displayName = 'StructuredListButton'\n\nexport interface StructuredListIconProps extends HTMLChakraProps<'div'> {\n  /**\n   * The icon size\n   * @default 5\n   */\n  size?: SystemProps['boxSize']\n  /**\n   * The icon spacing, ltr supported\n   */\n  spacing?: SystemProps['margin']\n}\n\nexport const StructuredListIcon: React.FC<StructuredListIconProps> = (\n  props\n) => {\n  const { children, spacing, size = 5, as, ...rest } = props\n  const styles = useStyles()\n\n  const iconStyles: SystemStyleObject = {\n    ...styles.icon,\n    me: spacing,\n  }\n\n  let _icon = children\n  if (!_icon && as) {\n    _icon = <Icon as={as} role=\"presentation\" boxSize={size} />\n  } else if (React.isValidElement(_icon) && _icon.type === Icon) {\n    _icon = React.cloneElement<any>(_icon, {\n      boxSize: size,\n    })\n  }\n\n  return (\n    <chakra.div\n      __css={iconStyles}\n      {...rest}\n      className={cx('sui-list__item-icon', props.className)}\n    >\n      {_icon}\n    </chakra.div>\n  )\n}\n\nStructuredListIcon.displayName = 'StructuredListItemIcon'\n\nexport interface StructuredListCellProps extends HTMLChakraProps<'div'> {}\n\nexport const StructuredListCell: React.FC<StructuredListCellProps> = (\n  props\n) => {\n  const { children, ...rest } = props\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      __css={styles.cell}\n      {...rest}\n      className={cx('sui-list__cell', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nStructuredListCell.displayName = 'StructuredListCell'\n","import { Link as ChakraLink, LinkProps, forwardRef } from '@chakra-ui/react'\nimport { useLink } from '../provider'\n\nexport type { LinkProps }\n\n/**\n * Chakra UI `Link` component wrapped in a router specific link component.\n * Falls back to a plain `Link` if no Saas UI context is available or no `linkComponent` is configured\n * The router link component can be configured in `SaasProvider`.\n * @see https://saas-ui.dev/docs/core/getting-started\n */\nexport const Link = forwardRef<LinkProps, 'a'>((props, ref) => {\n  const LinkComponent = useLink()\n\n  const { href, ...rest } = props\n\n  return <ChakraLink as={LinkComponent} ref={ref} href={href} {...rest} />\n})\n\nLink.displayName = 'Link'\n","import React, { useState } from 'react'\nimport {\n  chakra,\n  Spinner,\n  ThemingProps,\n  ThemeTypings,\n  SystemStyleObject,\n  createStylesContext,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemProps,\n  fadeConfig,\n  SpinnerProps,\n} from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\n\nimport { AnimatePresence, motion } from 'framer-motion'\n\ntype Variants = 'fill' | 'overlay' | 'fullscreen'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiLoadingOverlay')\n\nexport const useLoadingOverlayStyles = useStyles\n\nexport interface LoadingOverlayProps\n  extends HTMLChakraProps<'div'>,\n    ThemingProps<'SuiLoadingOverlay'> {\n  /**\n   * Show or hide the LoadingOverlay.\n   * @default true\n   */\n  isLoading?: boolean\n\n  /**\n   * The transition that should be used for the overlay\n   * @default \"fade\"\n   */\n  motionPreset?: 'none' | 'fade'\n  /**\n   * Spacing between children\n   */\n  spacing?: SystemProps['margin']\n  /**\n   * @type \"fill\" | \"overlay\" | \"fullscreen\"\n   * @default \"fill\"\n   */\n  variant?: 'SuiLoadingOverlay' extends keyof ThemeTypings['components']\n    ? /* @ts-ignore */\n      ThemeTypings['components']['SuiLoadingOverlay']['variants']\n    : Variants\n}\n\nconst Motion = chakra(motion.div)\n\nexport const LoadingOverlay: React.FC<LoadingOverlayProps> = (props) => {\n  const styles = useMultiStyleConfig('SuiLoadingOverlay', props)\n\n  const {\n    children,\n    isLoading = true,\n    spacing = 2,\n    motionPreset,\n    ...rest\n  } = omitThemingProps(props)\n\n  const overlayStyles: SystemStyleObject = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& > *:not(style) ~ *:not(style)': { marginTop: spacing },\n    ...styles.overlay,\n  }\n\n  const [animateInitial] = useState(!isLoading && motionPreset !== 'none')\n\n  const motionProps: any = motionPreset === 'none' ? {} : fadeConfig\n\n  return (\n    <StylesProvider value={styles}>\n      <AnimatePresence initial={animateInitial}>\n        {isLoading && (\n          <Motion\n            {...motionProps}\n            {...rest}\n            __css={overlayStyles}\n            className={cx('chakra-loading-overlay', props.className)}\n          >\n            {children}\n          </Motion>\n        )}\n      </AnimatePresence>\n    </StylesProvider>\n  )\n}\n\nLoadingOverlay.displayName = 'LoadingOverlay'\n\nexport const LoadingSpinner = Spinner\n\nexport type LoadingSpinnerProps = SpinnerProps\n\nexport interface LoadingTextProps extends HTMLChakraProps<'p'> {}\n\nexport const LoadingText: React.FC<LoadingTextProps> = (props) => {\n  const styles = useStyles()\n  return <chakra.p {...props} __css={styles.text}></chakra.p>\n}\n","import * as React from 'react'\nimport {\n  Menu,\n  MenuProps,\n  MenuButton,\n  MenuList,\n  MenuListProps,\n  IconButton,\n  ThemeTypings,\n} from '@chakra-ui/react'\nimport { MoreIcon } from './icons'\n\nexport interface OverflowMenuProps extends Omit<MenuProps, 'size'> {\n  /**\n   * The button (aria) label.\n   */\n  label?: string\n  /**\n   * The MenuButton variant.\n   */\n  variant?: 'Button' extends keyof ThemeTypings['components']\n    ? /* @ts-ignore */\n      ThemeTypings['components']['Button']['variants']\n    : string\n  /**\n   * The MenuButton size\n   */\n  size?: 'IconButton' extends keyof ThemeTypings['components']\n    ? /* @ts-ignore */\n      ThemeTypings['components']['IconButton']['sizes']\n    : string\n  /**\n   * Props passed to the MenuList.\n   */\n  menuListProps?: MenuListProps\n  /**\n   * Render a custom icon.\n   */\n  icon?: React.ReactElement\n\n  children: React.ReactNode\n}\n\nexport const OverflowMenu: React.FC<OverflowMenuProps> = (props) => {\n  const {\n    variant = 'ghost',\n    size,\n    label = 'More',\n    icon = <MoreIcon />,\n    menuListProps,\n    children,\n    ...rest\n  } = props\n  return (\n    <Menu {...rest}>\n      <MenuButton\n        as={IconButton}\n        icon={icon}\n        aria-label={label}\n        variant={variant}\n        size={size}\n      />\n      <MenuList {...menuListProps}>{children}</MenuList>\n    </Menu>\n  )\n}\n\nOverflowMenu.displayName = 'OverflowMenu'\n","import * as React from 'react'\nimport { Icon, IconProps } from '@chakra-ui/react'\n\nexport const MoreIcon = (props: IconProps) => {\n  return (\n    <Icon viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" {...props}>\n      <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n      <circle cx=\"12\" cy=\"5\" r=\"1\"></circle>\n      <circle cx=\"12\" cy=\"19\" r=\"1\"></circle>\n    </Icon>\n  )\n}\n","import * as React from 'react'\nimport { useCallback, useRef, useState } from 'react'\nimport {\n  chakra,\n  Menu,\n  MenuProps,\n  MenuList,\n  MenuListProps,\n  MenuItem,\n  HTMLChakraProps,\n  useMenuContext,\n  useEventListener,\n  useOutsideClick,\n  forwardRef,\n} from '@chakra-ui/react'\n\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils'\nimport { AnyPointerEvent, callAllHandlers, runIfFn } from '@chakra-ui/utils'\n\n// @todo migrate this to Ark-ui ContextMenu\nimport { useLongPress } from '@react-aria/interactions'\n\nimport { getEventPoint } from '@zag-js/dom-event'\nimport { FocusableElement } from '@react-types/shared'\n\ntype Position = [number, number]\ntype Anchor = { x: number; y: number }\n\nexport interface UseContextMenuReturn {\n  isOpen: boolean\n  anchor: Anchor\n  triggerRef: React.RefObject<HTMLSpanElement>\n  menuRef: React.RefObject<HTMLDivElement>\n  onClose: () => void\n  onOpen: (event: AnyPointerEvent) => void\n}\n\nexport const [ContextMenuProvider, useContextMenuContext] =\n  createContext<UseContextMenuReturn>({\n    name: 'UseContextMenuContext',\n    strict: false,\n  })\n\nexport interface UseContextMenuProps extends ContextMenuProps {\n  onClose?: () => void\n}\n\nexport const useContextMenu = (props: UseContextMenuProps) => {\n  const { closeOnBlur = true } = props\n  const [isOpen, setIsOpen] = useState(false)\n  const [anchor, setAnchor] = useState<Anchor>({ x: 0, y: 0 })\n  const triggerRef = useRef<HTMLSpanElement>(null)\n  const menuRef = useRef<HTMLDivElement>(null)\n\n  // useOutsideClick of menu doesn't catch contextmenu\n  useEventListener('contextmenu', (e) => {\n    if (\n      !triggerRef.current?.contains(e.target as any) &&\n      e.target !== triggerRef.current\n    ) {\n      setIsOpen(false)\n    } else {\n      e.preventDefault()\n      e.stopPropagation()\n    }\n  })\n\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: (event: any /* MouseEvent */) => {\n      if (\n        !(\n          event.button === 2 &&\n          triggerRef.current?.contains(event.target as HTMLElement)\n        ) &&\n        menuRef.current?.parentElement !== event.target\n      ) {\n        onClose()\n      }\n    },\n  })\n\n  const onOpen = useCallback((event: AnyPointerEvent) => {\n    const point = getEventPoint(event)\n    setAnchor(point)\n    setIsOpen(true)\n  }, [])\n\n  const onClose = useCallback(() => {\n    props.onClose?.()\n    setIsOpen(false)\n  }, [props.onClose, setIsOpen])\n\n  return {\n    isOpen,\n    anchor,\n    triggerRef,\n    menuRef,\n    onClose,\n    onOpen,\n  }\n}\n\nexport interface ContextMenuProps extends MenuProps {}\nexport const ContextMenu: React.FC<ContextMenuProps> = (props) => {\n  const { children, ...rest } = props\n  const ctx = useContextMenu(props)\n\n  const context = React.useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose } = context\n\n  return (\n    <Menu\n      gutter={0}\n      {...rest}\n      isOpen={isOpen}\n      onClose={onClose}\n      closeOnBlur={false}\n    >\n      {(fnProps) => (\n        <ContextMenuProvider value={context}>\n          {runIfFn(children, fnProps)}\n        </ContextMenuProvider>\n      )}\n    </Menu>\n  )\n}\n\nContextMenu.displayName = 'ContextMenu'\n\nconst generateClientRect = (x = 0, y = 0) => {\n  return () => {\n    return {\n      width: 0,\n      height: 0,\n      top: y,\n      left: x,\n      right: x,\n      bottom: y,\n    }\n  }\n}\n\nconst isTouchDevice = () => {\n  return (\n    typeof window !== undefined && window.matchMedia('(hover: none)').matches\n  )\n}\n\nconst useContextMenuTrigger = (\n  props: ContextMenuTriggerProps,\n  ref: React.ForwardedRef<any>\n) => {\n  const { triggerRef, onOpen, onClose, anchor } = useContextMenuContext()\n\n  const menu = useMenuContext()\n\n  const { popper, openAndFocusFirstItem } = menu\n\n  const { longPressProps } = useLongPress({\n    isDisabled: props.longPressDisabled,\n    accessibilityDescription: 'Long press to open context menu',\n    onLongPressStart: (e) => {\n      onClose()\n    },\n    onLongPress: (e) => {\n      if (e.pointerType === 'mouse') return\n\n      if (e.type === 'longpress') {\n        onOpen(e as unknown as AnyPointerEvent)\n        openAndFocusFirstItem()\n      }\n    },\n  })\n\n  const anchorRef = React.useRef({\n    getBoundingClientRect: generateClientRect(anchor.x, anchor.y),\n  })\n\n  React.useEffect(() => {\n    popper.referenceRef(anchorRef.current)\n  }, [])\n\n  React.useEffect(() => {\n    anchorRef.current.getBoundingClientRect = generateClientRect(\n      anchor.x,\n      anchor.y\n    )\n    menu.popper.update()\n  }, [anchor])\n\n  const onPointerDown: React.PointerEventHandler<FocusableElement> = (\n    event\n  ) => {\n    if (event.pointerType !== 'mouse') {\n      longPressProps.onPointerDown?.(event)\n    }\n  }\n\n  const onMouseDown: React.MouseEventHandler<FocusableElement> = (event) => {\n    if (isTouchDevice()) {\n      longPressProps.onMouseDown?.(event)\n    }\n  }\n\n  return {\n    triggerProps: {\n      ...longPressProps,\n      onPointerDown,\n      onMouseDown,\n      onContextMenu: callAllHandlers((event: AnyPointerEvent) => {\n        event.preventDefault()\n        onOpen(event)\n        openAndFocusFirstItem()\n      }, props.onContextMenu as any),\n      ref: mergeRefs(triggerRef, ref),\n    },\n  }\n}\n\nexport interface ContextMenuTriggerProps extends HTMLChakraProps<'span'> {\n  /**\n   * If `true`, the long press gesture is disabled.\n   */\n  longPressDisabled?: boolean\n}\n\nexport const ContextMenuTrigger = forwardRef<ContextMenuTriggerProps, 'span'>(\n  (props, ref) => {\n    const { children, longPressDisabled, ...rest } = props\n\n    const { triggerProps } = useContextMenuTrigger(props, ref)\n\n    return (\n      <chakra.span\n        {...rest}\n        sx={{ WebkitTouchCallout: 'none' }}\n        {...triggerProps}\n      >\n        {children}\n      </chakra.span>\n    )\n  }\n)\n\nContextMenuTrigger.displayName = 'ContextMenuTrigger'\n\nexport interface ContextMenuListProps extends MenuListProps {}\n\nexport const ContextMenuList: React.FC<ContextMenuListProps> = (props) => {\n  const { children, ...rest } = props\n  const { menuRef } = useContextMenuContext()\n\n  return (\n    <MenuList ref={menuRef} {...rest}>\n      {children}\n    </MenuList>\n  )\n}\n\nContextMenuList.displayName = 'ContextMenuList'\n\nexport const ContextMenuItem = MenuItem\n","import * as React from 'react'\n\nimport {\n  Avatar,\n  AvatarBadge,\n  AvatarProps,\n  AvatarBadgeProps,\n  Tooltip,\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  SystemStyleObject,\n  SystemProps,\n  useColorModeValue,\n  useTheme,\n  useMultiStyleConfig,\n  omitThemingProps,\n  createStylesContext,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiPersona')\n\nexport interface PresenceOptions {\n  [presence: string]: {\n    label: string\n    color: string\n  }\n}\n\n/**\n * The presence configuration object.\n *\n * Default presence values: online, offline, busy, dnd, away\n *\n * You can overwrite colors in the theme semantic tokens.\n * theme.semanticTokens.colors['presence.online'] = 'cyan.500'\n *\n * Or add a custom presence value\n * theme.semanticTokens.colors['presence.vacay'] = 'blue.500'\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const Presence: PresenceOptions = {\n  online: {\n    label: 'Online',\n    color: 'presence.online',\n  },\n  offline: {\n    label: 'Offline',\n    color: 'presence.offline',\n  },\n  busy: {\n    label: 'Busy',\n    color: 'presence.busy',\n  },\n  dnd: {\n    label: 'Do-not-disturb',\n    color: 'presence.dnd',\n  },\n  away: {\n    label: 'Away',\n    color: 'presence.away',\n  },\n}\n\n/**\n * Fallback when theme tokens aren't configured\n */\nexport const defaultPresenceTokens = {\n  online: 'green.500',\n  offline: 'gray.400',\n  busy: 'orange.500',\n  dnd: 'red.500',\n  away: 'gray.400',\n}\n\ninterface PersonaOptions {\n  /**\n   * The name of the person in the avatar.\n   *\n   * - if `src` has loaded, the name will be used as the `alt` attribute of the `img`\n   * - If `src` is not loaded, the name will be used to create the initials\n   */\n  name?: string\n  /**\n   * The presence status of the person\n   *\n   * If set will add an AvatarBadge with color configured in `Presence`\n   * Default presence options:\n   * - online\n   * - offline\n   * - busy\n   * - dnd\n   * - away\n   */\n  presence?: string\n  /**\n   * The icon shown in the AvatarBadge\n   */\n  presenceIcon?: React.ReactNode\n  /**\n   * Indicates that a person is out of office. Changes the presence badge style.\n   */\n  isOutOfOffice?: boolean\n  /**\n   * Primary label of the persona, defaults to the name\n   */\n  label?: React.ReactNode\n  /**\n   * Secondary label, usually the role of the person\n   * Only visible from md size and up.\n   */\n  secondaryLabel?: React.ReactNode\n  /**\n   * Tertiary label, usually the status of the person.\n   * Only visible from lg size and up.\n   */\n  tertiaryLabel?: React.ReactNode\n  /**\n   * Hide the persona details next to the avatar.\n   */\n  hideDetails?: boolean\n  /**\n   * The size of the persona, from 2xs to 2xl.\n   */\n}\n\nexport interface PersonaProps\n  extends PersonaOptions,\n    Omit<PresenceAvatarProps, 'size' | 'variant'>,\n    ThemingProps<'SuiPersona'> {}\n/**\n * The wrapper component that handles default composition.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const Persona: React.FC<PersonaProps> = (props) => {\n  const {\n    name,\n    presence,\n    presenceIcon,\n    isOutOfOffice,\n    label,\n    secondaryLabel,\n    tertiaryLabel,\n    size,\n    hideDetails,\n    children,\n    /** Avatar props */\n    getInitials,\n    icon,\n    iconLabel,\n    ignoreFallback,\n    loading,\n    onError,\n    src,\n    srcSet,\n    ...rest\n  } = props\n\n  const isComposed = !!(name || label || src || icon)\n\n  return (\n    <PersonaContainer size={size} {...rest}>\n      {isComposed ? (\n        <>\n          <PersonaAvatar\n            name={name}\n            presence={presence}\n            presenceIcon={presenceIcon}\n            isOutOfOffice={isOutOfOffice}\n            size={size}\n            getInitials={getInitials}\n            icon={icon}\n            iconLabel={iconLabel}\n            ignoreFallback={ignoreFallback}\n            loading={loading}\n            onError={onError}\n            src={src}\n            srcSet={srcSet}\n          />\n\n          {!hideDetails && (\n            <PersonaDetails>\n              <PersonaLabel>{label || name}</PersonaLabel>\n              {secondaryLabel && (\n                <PersonaSecondaryLabel>{secondaryLabel}</PersonaSecondaryLabel>\n              )}\n              {tertiaryLabel && (\n                <PersonaTertiaryLabel>{tertiaryLabel}</PersonaTertiaryLabel>\n              )}\n              {children}\n            </PersonaDetails>\n          )}\n        </>\n      ) : (\n        children\n      )}\n    </PersonaContainer>\n  )\n}\n\nPersona.displayName = 'Persona'\n\nexport interface PersonaContainerProps\n  extends HTMLChakraProps<'div'>,\n    ThemingProps<'SuiPersona'> {}\n/**\n * The container component that provides context and styles.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaContainer = forwardRef<PersonaContainerProps, 'div'>(\n  (props, ref) => {\n    const { children, ...rest } = props\n    const styles = useMultiStyleConfig('SuiPersona', props)\n\n    const containerProps = omitThemingProps(rest)\n\n    const baseStyle: SystemStyleObject = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n    }\n\n    const containerStyles: SystemStyleObject = {\n      ...baseStyle,\n      ...styles.container,\n    }\n\n    return (\n      <StylesProvider value={styles}>\n        <chakra.div\n          ref={ref}\n          __css={containerStyles}\n          {...containerProps}\n          className={cx('sui-persona', props.className)}\n        >\n          {children}\n        </chakra.div>\n      </StylesProvider>\n    )\n  }\n)\n\nPersonaContainer.displayName = 'PersonaContainer'\n\ninterface PresenceAvatarOptions {\n  /**\n   * The name of the person in the avatar.\n   *\n   * - if `src` has loaded, the name will be used as the `alt` attribute of the `img`\n   * - If `src` is not loaded, the name will be used to create the initials\n   */\n  name?: string\n  /**\n   * The presence status of the person\n   *\n   * If set will add an AvatarBadge with color configured in `Presence`\n   * Default presence options:\n   * - online\n   * - offline\n   * - busy\n   * - dnd\n   * - away\n   */\n  presence?: string\n  /**\n   * The textual presence status of the person.\n   * Online, Offline, Busy, Do-not-disturb or Away\n   */\n  presenceLabel?: string\n  /**\n   * The icon shown in the AvatarBadge\n   */\n  presenceIcon?: React.ReactNode\n  /**\n   * The badge size. Defaults to 1em. Use em value to keep the size relative to the avatar.\n   */\n  badgeSize?: SystemProps['boxSize']\n  /**\n   * Indicates that a person is out of office. Changes the presence badge style.\n   */\n  isOutOfOffice?: boolean\n}\n\ninterface PresenceAvatarProps extends PresenceAvatarOptions, AvatarProps {}\n/**\n * An avatar with optional status badge.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaAvatar = forwardRef<PresenceAvatarProps, 'span'>(\n  (props, ref) => {\n    const {\n      name,\n      presence,\n      presenceLabel,\n      presenceIcon,\n      isOutOfOffice,\n      badgeSize = '1em',\n      size,\n      getInitials,\n      icon,\n      iconLabel,\n      ignoreFallback,\n      loading,\n      onError,\n      src,\n      srcSet,\n      ...rest\n    } = props\n    const badgeProps: AvatarBadgeProps = {}\n    let badge\n\n    const theme = useTheme()\n\n    const colors = theme.colors?.presence || defaultPresenceTokens\n    const semantic = !!theme.semanticTokens?.colors?.['presence.online']\n\n    if (presence) {\n      const label = presenceLabel || Presence[presence]?.label\n      const color = semantic\n        ? Presence[presence]?.color || `presence.${presence}`\n        : colors[presence]\n      if (isOutOfOffice) {\n        badgeProps.sx = {\n          _before: {\n            content: '\"\"',\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            border: '0.2em solid',\n            borderColor: color,\n            borderRadius: '50%',\n            boxSizing: 'border-box',\n          },\n        }\n        badgeProps.borderWidth = '0.15em'\n        badgeProps.bg = useColorModeValue('white', 'gray.800')\n      } else {\n        badgeProps.bg = color\n      }\n\n      badge = (\n        <AvatarBadge boxSize={badgeSize} {...badgeProps}>\n          {presenceIcon}\n        </AvatarBadge>\n      )\n\n      if (label) {\n        badge = <Tooltip label={label}>{badge}</Tooltip>\n      }\n    }\n\n    return (\n      <Avatar\n        ref={ref}\n        name={name}\n        size={size}\n        getInitials={getInitials}\n        icon={icon}\n        iconLabel={iconLabel}\n        ignoreFallback={ignoreFallback}\n        loading={loading}\n        onError={onError}\n        src={src}\n        srcSet={srcSet}\n        {...rest}\n      >\n        {badge}\n      </Avatar>\n    )\n  }\n)\n\nPersonaAvatar.displayName = 'PersonaAvatar'\n\n/**\n * Wrapper component for the labels.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaDetails = forwardRef<PersonaProps, 'div'>((props, ref) => {\n  const { children, className, ...rest } = props\n  const styles = useStyles()\n\n  const baseStyle: SystemStyleObject = {\n    display: 'flex',\n    flexDirection: 'column',\n  }\n\n  const detailsStyles = {\n    ...baseStyle,\n    ...styles.details,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      {...rest}\n      __css={detailsStyles}\n      className={cx('sui-persona__details', className)}\n    >\n      {children}\n    </chakra.div>\n  )\n})\n\nPersonaDetails.displayName = 'PersonaDetails'\n\n/**\n * The main label, usually a name.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaLabel = forwardRef<HTMLChakraProps<'span'>, 'span'>(\n  (props, ref) => {\n    const styles = useStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.label}\n        className={cx('sui-persona__label', props.className)}\n      />\n    )\n  }\n)\n\nPersonaLabel.displayName = 'PersonaLabel'\n\n/**\n * The secondary label, usually the role of a person.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaSecondaryLabel = forwardRef<\n  HTMLChakraProps<'span'>,\n  'span'\n>((props, ref) => {\n  const styles = useStyles()\n  return (\n    <chakra.span\n      ref={ref}\n      {...props}\n      __css={styles.secondaryLabel}\n      className={cx('sui-persona__secondary-label', props.className)}\n    />\n  )\n})\n\nPersonaSecondaryLabel.displayName = 'PersonaSecondaryLabel'\n\n/**\n * The tertiary label, typically a status message.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/persona\n */\nexport const PersonaTertiaryLabel = forwardRef<HTMLChakraProps<'span'>, 'span'>(\n  (props, ref) => {\n    const styles = useStyles()\n\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.tertiaryLabel}\n        className={cx('sui-persona__tertiary-label', props.className)}\n      />\n    )\n  }\n)\n\nPersonaTertiaryLabel.displayName = 'PersonaTertiaryLabel'\n","import * as React from 'react'\n\nimport {\n  List,\n  ListProps,\n  chakra,\n  forwardRef,\n  useMultiStyleConfig,\n  useColorModeValue,\n  HTMLChakraProps,\n  ThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  omitThemingProps,\n  createStylesContext,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiProperty')\n\ninterface PropertyOptions {\n  label?: React.ReactNode\n  value?: React.ReactNode\n  labelWidth?: SystemProps['width']\n  spacing?: SystemProps['margin']\n}\n\nexport interface PropertyProps\n  extends PropertyOptions,\n    HTMLChakraProps<'dl'>,\n    ThemingProps<'SuiProperty'> {}\n/**\n * The wrapper component that handles default composition.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/property\n */\nexport const Property = forwardRef<PropertyProps, 'dl'>((props, ref) => {\n  const styles = useMultiStyleConfig('SuiProperty', props)\n\n  const { children, label, value, labelWidth, spacing, ...rest } =\n    omitThemingProps(props)\n\n  const propertyStyles: SystemStyleObject = {\n    minW: 0,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    ...styles.property,\n  }\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.dl\n        ref={ref}\n        __css={propertyStyles}\n        {...rest}\n        className={cx('sui-property', props.className)}\n      >\n        {label && (\n          <PropertyLabel\n            width={labelWidth}\n            minWidth={labelWidth}\n            marginEnd={spacing}\n          >\n            {label}\n          </PropertyLabel>\n        )}\n        {value && <PropertyValue>{value}</PropertyValue>}\n        {children}\n      </chakra.dl>\n    </StylesProvider>\n  )\n})\n\nProperty.displayName = 'Property'\n\nexport interface PropertyLabelProps extends HTMLChakraProps<'dt'> {}\n/**\n * The property label.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/property\n */\nexport const PropertyLabel = forwardRef<PropertyProps, 'dt'>((props, ref) => {\n  const styles = useStyles()\n  const { children, noOfLines = 1, width, minWidth, ...rest } = props\n\n  const labelStyles = {\n    display: 'flex',\n    flexDirection: 'row',\n    ...styles.label,\n  }\n\n  if (width) {\n    labelStyles.minWidth = minWidth || 'auto'\n    labelStyles.width = width\n  }\n\n  return (\n    <chakra.dt\n      ref={ref}\n      __css={labelStyles}\n      {...rest}\n      className={cx('sui-property__label', props.className)}\n    >\n      <chakra.span flex=\"1\" noOfLines={noOfLines}>\n        {children}\n      </chakra.span>\n    </chakra.dt>\n  )\n})\n\nPropertyLabel.displayName = 'PropertyLabel'\n\nexport interface PropertyValueProps extends HTMLChakraProps<'dd'> {}\n/**\n * The property value.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/property\n */\nexport const PropertyValue = forwardRef<PropertyValueProps, 'dd'>(\n  (props, ref) => {\n    const styles = useStyles()\n\n    const { children, ...rest } = props\n\n    const valueStyles = {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      flex: 1,\n      ...styles.value,\n    }\n\n    return (\n      <chakra.dd\n        ref={ref}\n        __css={valueStyles}\n        {...rest}\n        className={cx('sui-property__value', props.className)}\n      >\n        {children}\n      </chakra.dd>\n    )\n  }\n)\n\nPropertyValue.displayName = 'PropertyValue'\n\nexport interface PropertyListProps extends Omit<ListProps, 'items'> {}\n\n/**\n * Render a list of properties.\n * Will set the `as` prop of it's children to `div`,\n * in order to render a semantically correct `dl` list.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/property\n */\nexport const PropertyList: React.FC<PropertyListProps> = (props) => {\n  const { children, ...rest } = props\n  return (\n    <chakra.dl {...rest} className={cx('sui-property-list', props.className)}>\n      {React.Children.map(children, (child) =>\n        React.isValidElement<PropertyProps>(child)\n          ? React.cloneElement(child, {\n              as: 'div',\n            })\n          : child\n      )}\n    </chakra.dl>\n  )\n}\n\nPropertyList.displayName = 'PropertyList'\n","import { PropGetterV2 } from '@chakra-ui/react-utils'\nimport { dataAttr } from '@chakra-ui/utils'\nimport React, { useEffect, useImperativeHandle, useRef, useState } from 'react'\nimport { useResizeObserver } from '@react-aria/utils'\nimport { useScrollPosition } from '@saas-ui/hooks'\nimport { HTMLMotionProps } from 'framer-motion'\n\nexport interface UseNavbarProps {\n  /**\n   * Ref to the DOM node.\n   */\n  ref: React.ForwardedRef<HTMLElement>\n  /**\n   * The parent element where the navbar is placed within.\n   * This is used to determine the scroll position and whether the navbar should be hidden or not.\n   * @default `window`\n   */\n  parentRef?: React.RefObject<HTMLElement>\n  /**\n   * The height of the navbar.\n   * @default \"3.5rem\" (56px)\n   */\n  height?: number | string\n  /**\n   * Whether the navbar should hide on scroll or not.\n   * @default false\n   */\n  shouldHideOnScroll?: boolean\n  /**\n   * Whether the navbar parent scroll event should be listened to or not.\n   * @default false\n   */\n  disableScrollHandler?: boolean\n  /**\n   * The props to modify the framer motion animation. Use the `variants` API to create your own animation.\n   * This motion is only available if the `shouldHideOnScroll` prop is set to `true`.\n   */\n  motionProps?: HTMLMotionProps<'nav'>\n  /**\n   * The scroll event handler for the navbar. The event fires when the navbar parent element is scrolled.\n   * it only works if `disableScrollHandler` is set to `false` or `shouldHideOnScroll` is set to `true`.\n   */\n  onScrollPositionChange?: (scrollPosition: number) => void\n  /**\n   * Style props to be applied to the navbar container.\n   */\n  style?: React.CSSProperties\n}\n\nexport function useNavbar(props: UseNavbarProps) {\n  const {\n    ref,\n    parentRef,\n    height = '3.5rem',\n    shouldHideOnScroll = false,\n    disableScrollHandler = false,\n    onScrollPositionChange,\n    motionProps,\n    ...containerProps\n  } = props\n\n  const containerRef = useRef<HTMLElement>(null)\n\n  useImperativeHandle(ref, () => containerRef.current as HTMLElement)\n\n  const prevWidth = useRef(0)\n  const navHeight = useRef(0)\n\n  const [isHidden, setIsHidden] = useState(false)\n\n  const updateWidth = () => {\n    if (containerRef.current) {\n      const width = containerRef.current.offsetWidth\n\n      if (width !== prevWidth.current) {\n        prevWidth.current = width\n      }\n    }\n  }\n\n  useResizeObserver({\n    ref: containerRef,\n    onResize: () => {\n      const currentWidth = containerRef.current?.offsetWidth\n\n      if (currentWidth !== prevWidth.current) {\n        updateWidth()\n      }\n    },\n  })\n\n  useEffect(() => {\n    updateWidth()\n\n    navHeight.current = containerRef.current?.offsetHeight || 0\n  }, [])\n\n  useScrollPosition({\n    elementRef: parentRef,\n    isEnabled: shouldHideOnScroll || !disableScrollHandler,\n    callback: ({ prevPos, currPos }) => {\n      onScrollPositionChange?.(currPos.y)\n      if (shouldHideOnScroll) {\n        setIsHidden((prev) => {\n          const next = currPos.y > prevPos.y && currPos.y > navHeight.current\n\n          return next !== prev ? next : prev\n        })\n      }\n    },\n  })\n\n  const getContainerProps: PropGetterV2<any> = (props = {}) => ({\n    ...containerProps,\n    ...motionProps,\n    'data-hidden': dataAttr(isHidden),\n    ref: containerRef,\n    style: {\n      '--navbar-height': height,\n      ...containerProps.style,\n      ...props?.style,\n    },\n  })\n\n  return {\n    containerRef,\n    height,\n    isHidden,\n    shouldHideOnScroll,\n    motionProps,\n    getContainerProps,\n  }\n}\n\nexport type UseNavbarReturn = ReturnType<typeof useNavbar>\n","import * as React from 'react'\n\nexport interface UsePromise {\n  error?: Error | null\n  data?: any\n  isLoading: boolean\n  isResolved: boolean\n  isRejected: boolean\n}\n\ntype CallbackFn = (...args: any[]) => Promise<any>\n\nexport function usePromise<C extends CallbackFn>(fn: C): [UsePromise, C] {\n  const [isLoading, setLoading] = React.useState(false)\n  const [isResolved, setResolved] = React.useState(false)\n  const [isRejected, setRejected] = React.useState(false)\n  const [error, setError] = React.useState(null)\n  const [data, setData] = React.useState(null)\n\n  const call: any = (...params: any) => {\n    setLoading(true)\n\n    return fn(...params)\n      .then((data) => {\n        setData(data)\n        setResolved(true)\n        setLoading(false)\n\n        return data\n      })\n      .catch((err) => {\n        setError(err)\n        setRejected(true)\n        setLoading(false)\n\n        throw err\n      })\n  }\n\n  return [{ error, data, isLoading, isResolved, isRejected }, call]\n}\n","import React, { useState, useEffect } from 'react'\nconst isBrowser = typeof window !== 'undefined'\n\nfunction setItem(key: string, value: string) {\n  if (isBrowser && 'localStorage' in window) {\n    return value === undefined\n      ? localStorage.removeItem(key)\n      : localStorage.setItem(key, value)\n  }\n}\n\nfunction getItem(key: string) {\n  if (isBrowser && 'localStorage' in window) {\n    return localStorage.getItem(key)\n  }\n}\n\nconst serializeJSON = <T>(value: T) => {\n  try {\n    return JSON.stringify(value)\n  } catch (e) {\n    throw new Error('useLocalStorage: failed to serialize the value to JSON')\n  }\n}\n\nconst deserializeJSON = (value?: string) => {\n  try {\n    return value && JSON.parse(value)\n  } catch (e) {\n    return value\n  }\n}\n\nexport interface UseLocalStorageOptions<T> {\n  serialize?<T>(value: T): string\n  deserialize?(value?: string): T\n}\n\ntype StorageEventDetail = {\n  key: string\n  newValue?: string\n}\nconst triggerCustomEvent = (detail: StorageEventDetail) => {\n  const event = new CustomEvent('use-local-storage', {\n    detail,\n  })\n  window.dispatchEvent(event)\n}\n\n/**\n * Works like useState but stores the value as JSON in localStorage.\n * Updates work across multiple tabs using StorageEvent.\n *\n * Setting undefined will remote the localStorage item.\n */\nexport const useLocalStorage = <T = string>(\n  key: string,\n  defaultValue: T,\n  options: UseLocalStorageOptions<T> = {}\n) => {\n  const { serialize = serializeJSON, deserialize = deserializeJSON } = options\n\n  const initRef = React.useRef(false)\n\n  const [value, setValue] = useState<T>(() => {\n    return isBrowser ? deserialize(getItem(key) ?? undefined) : defaultValue\n  })\n\n  useEffect(() => {\n    const handler = (event: StorageEvent | CustomEvent<StorageEventDetail>) => {\n      const isCustom = event instanceof CustomEvent\n      const eventKey = isCustom ? event.detail.key : event.key\n      const newValue = isCustom ? event.detail.newValue : event.newValue\n\n      if (\n        (isCustom || event.storageArea === window.localStorage) &&\n        eventKey === key\n      ) {\n        setValue(deserialize(newValue ?? undefined))\n      }\n    }\n\n    if (isBrowser) {\n      window.addEventListener('storage', handler)\n      window.addEventListener<any>('use-local-storage', handler)\n    }\n    return () => {\n      if (isBrowser) {\n        window.removeEventListener('storage', handler)\n        window.removeEventListener<any>('use-local-storage', handler)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!initRef.current) {\n      initRef.current = true\n      return\n    }\n    const serializedValue = serialize(value)\n    if (getItem(key) !== serializedValue) {\n      setItem(key, serializedValue)\n      triggerCustomEvent({ key, newValue: serializedValue })\n    }\n  }, [value])\n\n  return [value === undefined ? defaultValue : value, setValue] as const\n}\n","import { useState } from 'react'\n\nconst FIRST_STEP = 0\n\ntype Step = {\n  id: string\n}\n\ntype UseStepsProps<S> = {\n  steps: S[]\n  initialStep?: number\n}\n\nexport const useSteps = <S extends { id: string } = Step>({\n  steps,\n  initialStep = FIRST_STEP,\n}: UseStepsProps<S>) => {\n  const [completed, setCompleted] = useState<string[]>([])\n  const [index, setIndex] = useState<number>(initialStep)\n  const step = steps[index]\n  const inRange = (index: number | string) => {\n    if (typeof index === 'number') {\n      if (index < FIRST_STEP) return FIRST_STEP\n      if (index >= steps.length) return steps.length - 1\n      return index\n    }\n\n    return steps.findIndex((step) => step.id === index) || FIRST_STEP\n  }\n\n  const go = (nextStep: number | string) => setIndex(inRange(nextStep))\n  const next = () => go(index + 1)\n  const prev = () => go(index - 1)\n\n  const setComplete = (completeStep: number | string = index) => {\n    const completeStepIndex = inRange(completeStep)\n    const id = steps[completeStepIndex].id\n\n    setCompleted([...new Set([...completed, id])])\n  }\n\n  const setUncomplete = (uncompleteStep: number | string = index) => {\n    const uncompleteStepIndex = inRange(uncompleteStep)\n    const stepId = steps[uncompleteStepIndex].id\n\n    setCompleted(completed.filter((id) => id !== stepId))\n  }\n\n  const reset = (resetStep = initialStep) => {\n    setIndex(resetStep)\n    setCompleted([])\n  }\n\n  return {\n    setComplete,\n    completed,\n    index,\n    isLast: index === steps.length - 1,\n    navigation: { next, prev, go },\n    step,\n    setUncomplete,\n    reset,\n  }\n}\n","import { useEffect, useState } from 'react'\n\nexport type Status = 'idle' | 'loading' | 'ready' | 'error'\nexport type ScriptElt = HTMLScriptElement | null\n\nexport const useScript = (src: string): Status => {\n  const [status, setStatus] = useState<Status>(src ? 'loading' : 'idle')\n\n  useEffect(\n    () => {\n      if (!src) {\n        setStatus('idle')\n        return\n      }\n\n      // Fetch existing script element by src\n      // It may have been added by another instance of this hook\n      let script: ScriptElt = document.querySelector(`script[src=\"${src}\"]`)\n\n      if (!script) {\n        // Create script\n        script = document.createElement('script')\n        script.src = src\n        script.async = true\n        script.setAttribute('data-status', 'loading')\n        // Add script to document body\n        document.body.appendChild(script)\n\n        // Store status in attribute on script\n        // This can be read by other instances of this hook\n        const setAttributeFromEvent = (event: Event) => {\n          script?.setAttribute(\n            'data-status',\n            event.type === 'load' ? 'ready' : 'error'\n          )\n        }\n\n        script.addEventListener('load', setAttributeFromEvent)\n        script.addEventListener('error', setAttributeFromEvent)\n      } else {\n        // Grab existing script status from attribute and set to state.\n        setStatus(script.getAttribute('data-status') as Status)\n      }\n\n      // Script event handler to update status in state\n      // Note: Even if the script already exists we still need to add\n      // event handlers to update the state for *this* hook instance.\n      const setStateFromEvent = (event: Event) => {\n        setStatus(event.type === 'load' ? 'ready' : 'error')\n      }\n\n      // Add event listeners\n      script.addEventListener('load', setStateFromEvent)\n      script.addEventListener('error', setStateFromEvent)\n\n      // Remove event listeners on cleanup\n      return () => {\n        if (script) {\n          script.removeEventListener('load', setStateFromEvent)\n          script.removeEventListener('error', setStateFromEvent)\n        }\n      }\n    },\n    [src] // Only re-run effect if script src changes\n  )\n\n  return status\n}\n","import { useRef, useEffect } from 'react'\n\nconst isBrowser = typeof window !== 'undefined'\n\nexport type ScrollValue = { x: any; y: any }\n\nfunction getScrollPosition(\n  element: HTMLElement | undefined | null\n): ScrollValue {\n  if (!isBrowser) return { x: 0, y: 0 }\n  if (!element) {\n    return { x: window.scrollX, y: window.scrollY }\n  }\n\n  return { x: element.scrollLeft, y: element.scrollTop }\n}\n\nexport interface UseScrollPositionOptions {\n  /**\n   * The wait time in milliseconds before triggering the callback.\n   * @default 30\n   */\n  delay?: number\n  /**\n   * Whether the scroll position should be tracked or not.\n   * @default true\n   */\n  isEnabled?: boolean\n  /**\n   * The element to track the scroll position for.\n   */\n  elementRef?: React.RefObject<HTMLElement> | null\n  /**\n   * The callback function to be called when the scroll position changes.\n   */\n  callback?: ({\n    prevPos,\n    currPos,\n  }: {\n    prevPos: ScrollValue\n    currPos: ScrollValue\n  }) => void\n}\n\nexport const useScrollPosition = (\n  props: UseScrollPositionOptions\n): ScrollValue => {\n  const { elementRef, delay = 30, callback, isEnabled } = props\n\n  const position = useRef<ScrollValue>(\n    isEnabled ? getScrollPosition(elementRef?.current) : { x: 0, y: 0 }\n  )\n\n  let throttleTimeout: ReturnType<typeof setTimeout> | null = null\n\n  const handler = () => {\n    const currPos = getScrollPosition(elementRef?.current)\n\n    if (typeof callback === 'function') {\n      callback({ prevPos: position.current, currPos })\n    }\n\n    position.current = currPos\n    throttleTimeout = null\n  }\n\n  useEffect(() => {\n    if (!isEnabled) return\n\n    const handleScroll = () => {\n      if (delay) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(handler, delay)\n        }\n      } else {\n        handler()\n      }\n    }\n\n    const target = elementRef?.current || window\n\n    target.addEventListener('scroll', handleScroll)\n\n    return () => target.removeEventListener('scroll', handleScroll)\n  }, [elementRef?.current, delay, isEnabled])\n\n  return position.current\n}\n","import {\n  createContext as createReactContext,\n  useContext as useReactContext,\n} from \"react\"\n\nexport interface CreateContextOptions<T> {\n  strict?: boolean\n  hookName?: string\n  providerName?: string\n  errorMessage?: string\n  name?: string\n  defaultValue?: T\n}\n\nexport type CreateContextReturn<T> = [\n  React.Provider<T>,\n  () => T,\n  React.Context<T>,\n]\n\nfunction getErrorMessage(hook: string, provider: string) {\n  return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`\n}\n\nexport function createContext<T>(options: CreateContextOptions<T> = {}) {\n  const {\n    name,\n    strict = true,\n    hookName = \"useContext\",\n    providerName = \"Provider\",\n    errorMessage,\n    defaultValue,\n  } = options\n\n  const Context = createReactContext<T | undefined>(defaultValue)\n\n  Context.displayName = name\n\n  function useContext() {\n    const context = useReactContext(Context)\n\n    if (!context && strict) {\n      const error = new Error(\n        errorMessage ?? getErrorMessage(hookName, providerName),\n      )\n      error.name = \"ContextError\"\n      Error.captureStackTrace?.(error, useContext)\n      throw error\n    }\n\n    return context\n  }\n\n  return [Context.Provider, useContext, Context] as CreateContextReturn<T>\n}\n","import { createContext } from '@chakra-ui/react-context'\n\nimport { UseNavbarReturn } from './use-navbar'\nimport { SystemStyleObject } from '@chakra-ui/styled-system'\n\nexport const [NavbarProvider, useNavbarContext] =\n  createContext<UseNavbarReturn>({\n    name: 'NavbarContext',\n    strict: true,\n    errorMessage:\n      'useNavbarContext: `context` is undefined. Seems you forgot to wrap component within <Navbar />',\n  })\n\nexport const [NavBarStylesProvider, useNavBarStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `NavBarStylesContext`,\n  hookName: `useNavItemStyles`,\n  providerName: '<NavBar />',\n})\n","import {\n  HTMLChakraProps,\n  ThemingProps,\n  chakra,\n  forwardRef,\n  useMultiStyleConfig,\n} from '@chakra-ui/react'\nimport { HTMLMotionProps, motion } from 'framer-motion'\nimport { UseNavbarProps, useNavbar } from './use-navbar'\nimport { NavBarStylesProvider, NavbarProvider } from './navbar-context'\nimport { cx } from '@saas-ui/react-utils'\n\nconst MotionBox = chakra(motion.nav)\n\ntype MotionProps = Pick<\n  HTMLMotionProps<'div'>,\n  'onAnimationStart' | 'onDrag' | 'onDragStart' | 'onDragEnd'\n>\n\nexport interface NavbarProps\n  extends Omit<UseNavbarProps, 'hideOnScroll' | 'ref'>,\n    Omit<HTMLChakraProps<'div'>, keyof MotionProps | 'height'>,\n    MotionProps,\n    ThemingProps<'SuiNavbar'> {\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nexport const Navbar = forwardRef<NavbarProps, 'div'>((props, ref) => {\n  const { children, ...otherProps } = props\n\n  const context = useNavbar({ ...otherProps, ref })\n\n  const styles = useMultiStyleConfig('SuiNavbar', props)\n\n  const content = (\n    <chakra.header __css={styles.inner} className=\"sui-navbar__inner\">\n      {children}\n    </chakra.header>\n  )\n\n  const containerStyles = {\n    top: props.position === 'sticky' ? '0' : undefined,\n    insetX: props.position === 'sticky' ? '0' : undefined,\n    ...styles.container,\n  }\n\n  return (\n    <NavBarStylesProvider value={styles}>\n      <NavbarProvider value={context}>\n        <MotionBox\n          __css={containerStyles}\n          animate={context.isHidden ? 'hidden' : 'visible'}\n          initial={false}\n          variants={{\n            hidden: { y: '-100%' },\n            visible: { y: 0, transition: { ease: 'easeInOut' } },\n          }}\n          className={cx('sui-navbar', props.className)}\n          {...context.getContainerProps()}\n        >\n          {content}\n        </MotionBox>\n      </NavbarProvider>\n    </NavBarStylesProvider>\n  )\n})\n\nNavbar.displayName = 'Navbar'\n","import { chakra, forwardRef, HTMLChakraProps } from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\nimport { useNavBarStyles } from './navbar-context'\n\nexport interface NavbarBrandProps extends HTMLChakraProps<'div'> {\n  children?: React.ReactNode | React.ReactNode[]\n}\n\nexport const NavbarBrand = forwardRef<NavbarBrandProps, 'div'>((props, ref) => {\n  const { className, children, ...rest } = props\n\n  const styles = useNavBarStyles()\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={styles.brand}\n      className={cx('sui-navbar__brand')}\n      {...rest}\n    >\n      {children}\n    </chakra.div>\n  )\n})\n\nNavbarBrand.displayName = 'NavbarBrand'\n","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemProps,\n} from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\n\nimport { useNavBarStyles } from './navbar-context'\n\nexport interface NavbarContentProps extends HTMLChakraProps<'ul'> {\n  /**\n   * Typically the `NavbarItem` component\n   */\n  children?: React.ReactNode | React.ReactNode[]\n  /**\n   * Spacing between each navbar item\n   */\n  spacing?: SystemProps['margin']\n}\n\nexport const NavbarContent = forwardRef<NavbarContentProps, 'ul'>(\n  (props, ref) => {\n    const { className, children, spacing = 0, ...rest } = props\n\n    const styles = useNavBarStyles()\n\n    const contentStyles = {\n      ...styles.content,\n      '& > *:not(style) ~ *:not(style)': { marginStart: spacing },\n    }\n\n    return (\n      <chakra.ul\n        ref={ref}\n        __css={contentStyles}\n        className={cx('sui-navbar__content', className)}\n        {...rest}\n      >\n        {children}\n      </chakra.ul>\n    )\n  }\n)\n\nNavbarContent.displayName = 'NavbarContent'\n","import { chakra, forwardRef, HTMLChakraProps } from '@chakra-ui/react'\nimport { cx, dataAttr } from '@chakra-ui/utils'\n\nimport { useNavBarStyles } from './navbar-context'\n\nexport interface NavbarItemProps extends HTMLChakraProps<'li'> {\n  children?: React.ReactNode\n  /**\n   * Whether the item is active or not.\n   * @default false\n   */\n  isActive?: boolean\n}\n\nexport const NavbarItem = forwardRef<NavbarItemProps, 'li'>((props, ref) => {\n  const { className, children, isActive, ...rest } = props\n\n  const styles = useNavBarStyles()\n\n  return (\n    <chakra.li\n      ref={ref}\n      __css={styles.item}\n      className={cx('sui-navbar__item', className)}\n      data-active={dataAttr(isActive)}\n      {...rest}\n    >\n      {children}\n    </chakra.li>\n  )\n})\n\nNavbarItem.displayName = 'NavbarItem'\n","import { chakra, forwardRef, HTMLChakraProps } from '@chakra-ui/react'\nimport { cx, dataAttr } from '@chakra-ui/utils'\n\nimport { useNavBarStyles } from './navbar-context'\nimport { useLink } from '../provider'\n\nexport interface NavbarLinkProps extends HTMLChakraProps<'a'> {\n  children?: React.ReactNode\n  /**\n   * Whether the link is active or not.\n   * @default false\n   */\n  isActive?: boolean\n}\n\nexport const NavbarLink = forwardRef<NavbarLinkProps, 'li'>((props, ref) => {\n  const { className, children, isActive, ...rest } = props\n\n  const Link = useLink()\n\n  const styles = useNavBarStyles()\n\n  return (\n    <chakra.a\n      as={Link}\n      ref={ref}\n      __css={styles.link}\n      data-active={dataAttr(isActive)}\n      className={cx('sui-navbar__link', className)}\n      {...rest}\n    >\n      {children}\n    </chakra.a>\n  )\n})\n\nNavbarLink.displayName = 'NavbarLink'\n","import * as React from 'react'\n\nimport {\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig,\n  useBreakpointValue,\n  SystemStyleObject,\n  IconButton,\n  useDisclosure,\n  Portal,\n  forwardRef,\n  useTheme,\n  useStyleConfig,\n} from '@chakra-ui/react'\nimport { cx, dataAttr, runIfFn } from '@chakra-ui/utils'\nimport { HamburgerIcon } from '../icons'\nimport { motion, AnimatePresence } from 'framer-motion'\n\nimport { useResponsiveValue } from '@saas-ui/react-utils'\n\nimport {\n  SidebarProvider,\n  useSidebarContext,\n  useSidebarToggleButton,\n} from './use-sidebar'\nimport { SidebarStylesProvider, useSidebarStyles } from './sidebar-context'\nimport {\n  SidebarOverlayProps,\n  SidebarProps,\n  SidebarSectionProps,\n  SidebarToggleButtonProps,\n} from './sidebar-types'\nimport { getBreakpoints } from './sidebar-utils'\nimport { useAppShellContext } from '../app-shell/app-shell-context'\n\nconst MotionBox = chakra(motion.nav)\n\nconst motionPresets = {\n  slideInOut: {\n    enter: {\n      left: 0,\n      transition: { type: 'spring', duration: 0.6, bounce: 0.15 },\n    },\n    exit: {\n      left: '-100%',\n    },\n  },\n  none: {},\n}\n\n/**\n * Side navigation, commonly used as the primary navigation\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const Sidebar = forwardRef<SidebarProps, 'nav'>((props, ref) => {\n  const styles = useMultiStyleConfig('SuiSidebar', props)\n  const theme = useTheme()\n  const defaultProps = theme.components['SuiSidebar']?.defaultProps\n\n  const variant = useResponsiveValue(props.variant ?? defaultProps?.variant, {\n    fallback: 'base',\n  })\n  const size = useResponsiveValue(props.size ?? defaultProps?.size, {\n    fallback: 'base',\n  })\n\n  const isCondensed = variant === 'compact'\n\n  const {\n    spacing = 4,\n    children,\n    toggleBreakpoint = 'lg',\n    className,\n    motionPreset = 'slideInOut',\n    isOpen: isOpenProp,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    ...containerProps\n  } = omitThemingProps(props)\n\n  const appShell = useAppShellContext()\n  const breakpoints = getBreakpoints(toggleBreakpoint)\n\n  const isMobile = useBreakpointValue(breakpoints, {\n    fallback: undefined,\n  })\n  // we check this twice to avoid SSR issues.\n  const isMobileInitial = useBreakpointValue(breakpoints)\n  const isInitial = typeof isMobile === 'undefined'\n  const isControlled = typeof isOpenProp !== 'undefined'\n  const isCollapsible = (isMobile || isControlled) && !isCondensed\n\n  const disclosure = useDisclosure({\n    isOpen: isOpenProp || appShell?.isSidebarOpen,\n    onOpen: onOpenProp || appShell?.openSidebar,\n    onClose: onCloseProp || appShell?.closeSidebar,\n  })\n\n  const { isOpen, onClose, onOpen } = disclosure\n\n  React.useEffect(() => {\n    if ((isInitial && isMobileInitial) || isCondensed || isControlled) {\n      // make sure we do not show an initial animation or when this is a compact sidebar\n      return\n    }\n    isMobileInitial ? onClose() : onOpen()\n  }, [isInitial, isCondensed, isMobileInitial])\n\n  const containerStyles: SystemStyleObject = {\n    '& > *:not(style) ~ *:not(style, .sui-resize-handle, .sui-sidebar__toggle-button + *)':\n      {\n        marginTop: spacing,\n      },\n    display: 'flex',\n    flexDirection: 'column',\n    ...(isMobile && isCollapsible\n      ? {\n          position: 'absolute',\n          zIndex: 'modal',\n          top: 0,\n          left: { base: '-100%', lg: '0' },\n          bottom: 0,\n        }\n      : {\n          position: 'relative',\n        }),\n  }\n\n  const context = {\n    ...disclosure,\n    breakpoints,\n    isMobile,\n    variant,\n    size,\n  }\n\n  const variants = motionPresets[isCondensed ? 'none' : motionPreset || 'none']\n\n  return (\n    <SidebarProvider value={context}>\n      <SidebarStylesProvider value={styles}>\n        <MotionBox\n          ref={ref}\n          initial={false}\n          animate={!isInitial && (!isCollapsible || isOpen ? 'enter' : 'exit')}\n          variants={variants}\n          __css={{\n            ...containerStyles,\n            ...styles.container,\n          }}\n          {...containerProps}\n          id={disclosure.getDisclosureProps().id}\n          className={cx('sui-sidebar', className)}\n          data-compact={dataAttr(isCondensed)}\n          data-collapsible={dataAttr(isMobile && isCollapsible)}\n        >\n          {children}\n        </MotionBox>\n      </SidebarStylesProvider>\n    </SidebarProvider>\n  )\n})\n\nSidebar.displayName = 'Sidebar'\nSidebar.id = 'Sidebar'\n\n/**\n * Button that toggles the sidebar visibility.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const SidebarToggleButton: React.FC<SidebarToggleButtonProps> = (\n  props\n) => {\n  const { sx, pos, position, variant = 'ghost', icon, isRound, ...rest } = props\n  const { isOpen, isMobile, getButtonProps } = useSidebarToggleButton()\n  const styles = useStyleConfig('SuiSidebarToggleButton', props)\n  const btnStyles = useStyleConfig('Button', {\n    ...props,\n    variant,\n  })\n\n  const p = pos ?? position ?? sx?.pos ?? sx?.position\n\n  const buttonStyles: SystemStyleObject = {\n    display: 'inline-flex',\n    appearance: 'none',\n    alignItems: 'center',\n    justifyContent: 'center',\n    userSelect: 'none',\n    whiteSpace: 'nowrap',\n    verticalAlign: 'middle',\n    outline: 'none',\n    ...btnStyles,\n    ...(isMobile\n      ? !p\n        ? { position: 'fixed', top: 3, left: 3, zIndex: 'popover' }\n        : {}\n      : { display: 'none' }),\n    ...styles,\n  }\n\n  const _icon = icon ? (\n    runIfFn(icon, {\n      isOpen,\n    })\n  ) : (\n    <HamburgerIcon aria-hidden=\"true\" focusable=\"false\" />\n  )\n\n  return (\n    <chakra.button\n      __css={buttonStyles}\n      padding=\"0\"\n      borderRadius={isRound ? 'full' : undefined}\n      aria-label={isOpen ? 'Close sidebar' : 'Open sidebar'}\n      data-state={isOpen ? 'open' : 'closed'}\n      {...rest}\n      {...getButtonProps(props)}\n      sx={sx}\n      className={cx('sui-sidebar__toggle-button', props.className)}\n    >\n      {_icon}\n    </chakra.button>\n  )\n}\n\n/**\n * Overlay shown when sidebar is open on mobile.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const SidebarOverlay: React.FC<SidebarOverlayProps> = (props) => {\n  const { onClose, isOpen, isMobile } = useSidebarContext()\n\n  const styles = useSidebarStyles()\n\n  return (\n    <Portal>\n      <AnimatePresence>\n        {isMobile && isOpen && (\n          <MotionBox\n            animate={isOpen ? 'enter' : 'exit'}\n            initial=\"exit\"\n            variants={{\n              enter: { opacity: 1 },\n              exit: { opacity: 0 },\n            }}\n            position=\"fixed\"\n            top=\"0\"\n            right=\"0\"\n            bottom=\"0\"\n            left=\"0\"\n            zIndex=\"overlay\"\n            {...props}\n            onClick={onClose}\n            __css={styles.overlay}\n          />\n        )}\n      </AnimatePresence>\n    </Portal>\n  )\n}\n\nSidebarToggleButton.displayName = 'SidebarToggleButton'\n\n/**\n * Sidebar section that can contain sidebar items.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const SidebarSection: React.FC<SidebarSectionProps> = (props) => {\n  const { direction = 'column', ...rest } = props\n  const styles = useSidebarStyles()\n  const sectionStyles = {\n    display: 'flex',\n    flexDirection: direction,\n    ...styles.section,\n  }\n\n  return (\n    <chakra.div\n      __css={sectionStyles}\n      {...rest}\n      className={cx('sui-sidebar__section', props.className)}\n    />\n  )\n}\n\nSidebarSection.displayName = 'SidebarSection'\n","import { createContext, PropGetter } from '@chakra-ui/react-utils'\nimport {\n  ResponsiveValue,\n  ThemeTypings,\n  UseDisclosureReturn,\n} from '@chakra-ui/react'\nimport { useAppShellContext } from '../app-shell/app-shell-context'\nimport { callAllHandlers } from '@chakra-ui/utils'\n\ntype Variants = 'compact' | 'default'\n\nexport interface UseSidebarReturn extends UseDisclosureReturn {\n  isMobile?: boolean\n  breakpoints?: ResponsiveValue<boolean>\n  variant?: 'Sidebar' extends keyof ThemeTypings['components'] /* @ts-ignore */\n    ? ThemeTypings['components']['Sidebar']['variants']\n    : Variants\n  size?: 'Sidebar' extends keyof ThemeTypings['components'] /* @ts-ignore */\n    ? ThemeTypings['components']['Sidebar']['sizes']\n    : string\n}\n\nexport const [SidebarProvider, useSidebarContext] =\n  createContext<UseSidebarReturn>({\n    name: 'SidebarContext',\n    strict: false,\n  })\n\nexport const useSidebarToggleButton = () => {\n  const appShellContext = useAppShellContext()\n  const context = useSidebarContext()\n\n  const getButtonProps: PropGetter = (props) => {\n    return {\n      onClick: callAllHandlers(\n        context?.onToggle || appShellContext?.toggleSidebar,\n        props?.onClick\n      ),\n    }\n  }\n\n  return {\n    isOpen: context?.isOpen || appShellContext?.isSidebarOpen,\n    isMobile: context?.isMobile || appShellContext?.isMobile,\n    getButtonProps,\n  }\n}\n","import { createContext } from '@chakra-ui/react-context'\nimport { SystemStyleObject } from '@chakra-ui/react'\n\nexport const [SidebarStylesProvider, useSidebarStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `SidebarStylesContext`,\n  hookName: `useSidebarStyles`,\n  providerName: '<Sidebar />',\n})\n","import * as React from 'react'\n\nimport {\n  chakra,\n  StackProps,\n  HTMLChakraProps,\n  useStyleConfig,\n} from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nexport interface NavProps extends HTMLChakraProps<'nav'> {\n  orientation?: 'vertical' | 'horizontal'\n  spacing?: StackProps['spacing']\n}\n\nexport const Nav: React.FC<NavProps> = (props) => {\n  const styles = useStyleConfig('SuiNav', props)\n\n  const { children, spacing = 0, orientation = 'vertical', ...rest } = props\n\n  const containerStyles = {\n    '& > *:not(style) ~ *:not(style)': {\n      mt: orientation === 'vertical' ? spacing : undefined,\n      me: orientation === 'horizontal' ? spacing : undefined,\n    },\n    ...styles,\n  }\n\n  return (\n    <chakra.nav\n      {...rest}\n      __css={containerStyles}\n      className={cx('sui-nav', props.className)}\n      data-orientation={orientation}\n    >\n      {children}\n    </chakra.nav>\n  )\n}\n\nNav.displayName = 'Nav'\n","import * as React from 'react'\n\nimport {\n  chakra,\n  Collapse,\n  HTMLChakraProps,\n  ThemingProps,\n  useMultiStyleConfig,\n} from '@chakra-ui/react'\n\nimport { runIfFn, cx } from '@chakra-ui/utils'\nimport { MaybeRenderProp } from '@chakra-ui/react-utils'\nimport { ChevronDownIcon, ChevronRightIcon } from '../icons'\n\nimport { CollapseProvider, useCollapseContext, useCollapse } from '../collapse'\n\nimport { NavGroupStylesProvider, useNavGroupStyles } from './nav-context'\n\nexport interface NavGroupTitleProps extends HTMLChakraProps<'div'> {\n  leftIcon?: React.ReactElement\n  collapseIcon?: MaybeRenderProp<{ isOpen: boolean }>\n  isCollapsible?: boolean\n}\n\nconst NavGroupIcon: React.FC<HTMLChakraProps<'span'>> = (props) => {\n  const { children, className, ...rest } = props\n\n  const _children = React.isValidElement<any>(children)\n    ? React.cloneElement(children, {\n        'aria-hidden': true,\n        focusable: false,\n      })\n    : children\n\n  const _className = cx('sui-nav-group__icon', className)\n\n  return (\n    <chakra.span\n      display=\"inline-flex\"\n      alignSelf=\"center\"\n      flexShrink={0}\n      {...rest}\n      className={_className}\n    >\n      {_children}\n    </chakra.span>\n  )\n}\n\nexport const NavGroupTitle: React.FC<NavGroupTitleProps> = (props) => {\n  const {\n    leftIcon,\n    collapseIcon = ({ isOpen }) =>\n      isOpen ? <ChevronDownIcon /> : <ChevronRightIcon />,\n    children,\n    ...rest\n  } = props\n  const styles = useNavGroupStyles()\n\n  const { getToggleProps, isOpen, isCollapsible } = useCollapseContext()\n\n  const iconStyles = { marginEnd: 2, ...styles.icon }\n\n  const toggleProps = getToggleProps(rest)\n\n  return (\n    <chakra.div\n      {...toggleProps}\n      __css={styles.title}\n      className={cx(\n        'saas-nav-group__title',\n        props.className,\n        toggleProps.className\n      )}\n    >\n      {leftIcon && <NavGroupIcon __css={iconStyles}>{leftIcon}</NavGroupIcon>}\n      <chakra.span flex=\"1\">{runIfFn(children, { isOpen })}</chakra.span>\n      {isCollapsible && (\n        <NavGroupIcon>{runIfFn(collapseIcon, { isOpen })}</NavGroupIcon>\n      )}\n    </chakra.div>\n  )\n}\n\nNavGroupTitle.displayName = 'NavGroupTitle'\n\nexport interface NavGroupProps\n  extends Omit<HTMLChakraProps<'div'>, 'title'>,\n    ThemingProps<'SuiNavGroup'> {\n  title?: React.ReactNode\n  isCollapsible?: boolean\n  defaultIsOpen?: boolean\n  onOpen?: () => void\n  onClose?: () => void\n  icon?: React.ReactElement\n}\n\nexport const NavGroupContent: React.FC<HTMLChakraProps<'div'>> = (props) => {\n  const styles = useNavGroupStyles()\n  return (\n    <chakra.div\n      {...props}\n      __css={styles.content}\n      className={cx('sui-nav-group__content', props.className)}\n    />\n  )\n}\n\n/**\n * Navigation group containing nav items, used in Sidebar.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const NavGroup: React.FC<NavGroupProps> = (props) => {\n  const {\n    title,\n    icon,\n    isCollapsible = false,\n    defaultIsOpen = true,\n    onOpen,\n    onClose,\n    children,\n    ...rest\n  } = props\n  const styles = useMultiStyleConfig('SuiNavGroup', props)\n\n  const collapse = useCollapse({\n    ...props,\n    defaultIsOpen,\n  })\n  const { getCollapseProps } = collapse\n\n  let header = title\n  if (typeof title === 'string') {\n    header = <NavGroupTitle leftIcon={icon}>{title}</NavGroupTitle>\n  }\n\n  let content = <NavGroupContent>{children}</NavGroupContent>\n\n  if (isCollapsible) {\n    content = <Collapse {...(getCollapseProps() as any)}>{content}</Collapse>\n  }\n\n  return (\n    <NavGroupStylesProvider value={styles}>\n      <CollapseProvider value={collapse}>\n        <chakra.div\n          __css={{\n            userSelect: 'none',\n            ...styles.container,\n          }}\n          {...rest}\n          className={cx('sui-nav-group', props.className)}\n          role=\"group\"\n        >\n          {header}\n          {content}\n        </chakra.div>\n      </CollapseProvider>\n    </NavGroupStylesProvider>\n  )\n}\n\nNavGroup.displayName = 'NavGroup'\n","import { createContext } from '@chakra-ui/react-context'\nimport { SystemStyleObject } from '@chakra-ui/react'\n\nexport const [NavGroupStylesProvider, useNavGroupStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `NavGroupStylesContext`,\n  hookName: `useNavItemStyles`,\n  providerName: '<NavItem />',\n})\n\nexport const [NavItemStylesProvider, useNavItemStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `NavItemStylesContext`,\n  hookName: `useNavItemStyles`,\n  providerName: '<NavItem />',\n})\n","import * as React from 'react'\n\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  HTMLChakraProps,\n  ThemingProps,\n  SystemProps,\n  useMultiStyleConfig,\n  Tooltip,\n  TooltipProps,\n} from '@chakra-ui/react'\n\nimport { cx, dataAttr } from '@chakra-ui/utils'\nimport { useLink } from '../provider'\n\nimport { useSidebarContext } from './use-sidebar'\nimport { NavItemStylesProvider, useNavItemStyles } from './nav-context'\n\nexport interface NavItemLabelProps extends HTMLChakraProps<'span'> {}\n\nexport const NavItemLabel = forwardRef<NavItemLabelProps, 'span'>(\n  ({ children, ...props }, ref) => {\n    const styles = useNavItemStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        __css={styles.label}\n        {...props}\n        className={cx('sui-nav-item__label', props.className)}\n      >\n        {children}\n      </chakra.span>\n    )\n  }\n)\n\nNavItemLabel.displayName = 'NavItemLabel'\n\nconst NavItemIcon: React.FC<HTMLChakraProps<'span'>> = (props) => {\n  const styles = useNavItemStyles()\n\n  const { className, children, ...rest } = props\n\n  const child = React.Children.only(children)\n\n  const clone = React.isValidElement<HTMLChakraProps<any>>(child)\n    ? React.cloneElement(child, {\n        focusable: 'false',\n        'aria-hidden': true,\n      })\n    : null\n\n  return (\n    <chakra.span\n      {...rest}\n      className={cx('sui-nav-item__icon', props.className)}\n      __css={{\n        flexShrink: 0,\n        ...styles.icon,\n      }}\n    >\n      {clone}\n    </chakra.span>\n  )\n}\n\nNavItemIcon.displayName = 'NavItemIcon'\n\nexport interface NavItemProps\n  extends HTMLChakraProps<'a'>,\n    ThemingProps<'SuiNavItem'> {\n  /**\n   * The href attribute of the nav item,\n   * will be wrapped in a `Link`, if `linkComponent` is configured in SaasProvider.\n   */\n  href?: string\n  /**\n   * Icon to be displayed in the nav item\n   */\n  icon?: React.ReactElement\n  /**\n   * Inset of the item, used for nested items\n   */\n  inset?: SystemProps['paddingLeft']\n  /**\n   * Props to be passed to the tooltip\n   * @see Docs https://chakra-ui.com/docs/overlay/tooltip\n   */\n  tooltipProps?: Omit<TooltipProps, 'children'>\n  /**\n   * If `true`, the nav item will be active\n   */\n  isActive?: boolean\n}\n\n/**\n * Navigation item used in the sidebar.\n *\n * @see Docs https://saas-ui.dev/docs/components/layout/sidebar\n */\nexport const NavItem = forwardRef<NavItemProps, 'a'>((props, ref) => {\n  const {\n    href,\n    icon,\n    inset,\n    className,\n    tooltipProps,\n    isActive,\n    children,\n    ...rest\n  } = omitThemingProps(props)\n  const Link = useLink()\n  const { onClose, variant: sidebarVariant } = useSidebarContext() || {}\n  const isCompact = sidebarVariant === 'compact'\n\n  const styles = useMultiStyleConfig('SuiNavItem', props)\n\n  let label = children\n  let tooltipLabel = tooltipProps?.label\n  if (typeof label === 'string') {\n    if (!tooltipLabel && isCompact) {\n      tooltipLabel = label\n    }\n    label = <NavItemLabel>{label}</NavItemLabel>\n  }\n\n  let as\n  if (href) {\n    as = Link\n  }\n\n  const link = (\n    <chakra.a\n      as={as}\n      aria-current={isActive ? 'page' : undefined}\n      {...rest}\n      ref={ref}\n      href={href}\n      className=\"sui-nav-item__link\"\n      data-active={dataAttr(isActive)}\n      __css={styles.link}\n    >\n      <chakra.span\n        __css={{\n          ...styles.inner,\n          pl: inset,\n        }}\n        className=\"sui-nav-item__inner\"\n      >\n        {icon && <NavItemIcon>{icon}</NavItemIcon>}\n        {label}\n      </chakra.span>\n    </chakra.a>\n  )\n\n  return (\n    <NavItemStylesProvider value={styles}>\n      <Tooltip\n        label={tooltipLabel}\n        placement=\"right\"\n        openDelay={400}\n        {...tooltipProps}\n      >\n        <chakra.div\n          __css={styles.item}\n          onClick={onClose}\n          data-compact={dataAttr(isCompact)}\n          className={cx('sui-nav-item', className)}\n        >\n          {link}\n        </chakra.div>\n      </Tooltip>\n    </NavItemStylesProvider>\n  )\n})\n\nNavItem.displayName = 'NavItem'\n","import * as React from 'react'\n\nimport {\n  forwardRef,\n  InputGroup,\n  Input,\n  InputLeftElement,\n  InputRightElement,\n  IconButton,\n  InputProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  useControllableState,\n  useMergeRefs,\n} from '@chakra-ui/react'\nimport { callAllHandlers } from '@chakra-ui/utils'\nimport { SearchIcon, CloseIcon } from '../icons'\n\nexport interface SearchInputProps\n  extends ThemingProps<'SuiSearchInput'>,\n    Omit<InputProps, 'size' | 'variant'> {\n  /**\n   * The placeholder text for the input\n   * @type string\n   * @default Search\n   */\n  placeholder?: string\n  /**\n   * The icon to render before the input text\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * The icon to render in the reset button\n   * @type React.ReactElement\n   */\n  resetIcon?: React.ReactElement\n  /**\n   * Right element rendered when the value is empty\n   * @type React.ReactElement\n   */\n  rightElement?: React.ReactElement\n  /**\n   * Callback to trigger when the reset button is clicked or escape key is pressed\n   */\n  onReset?: () => void\n}\n\nexport const SearchInput = forwardRef<SearchInputProps, 'input'>(\n  (props, ref) => {\n    const {\n      placeholder = 'Search',\n      value: valueProp,\n      defaultValue: defaultValueProp,\n      size,\n      variant,\n      width,\n      icon,\n      resetIcon,\n      rightElement,\n      onChange: onChangeProp,\n      onReset: onResetProp,\n      onKeyDown: onKeyDownProp,\n      ...inputProps\n    } = props\n    const styles = useMultiStyleConfig('SuiSearchInput', props)\n\n    const inputRef = React.useRef<HTMLInputElement>(null)\n\n    const [value, setValue] = useControllableState({\n      value: valueProp,\n      defaultValue: defaultValueProp,\n    })\n\n    const onChange = React.useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(e.target.value)\n      },\n      [setValue]\n    )\n\n    const onKeyDown = React.useCallback(\n      (event: React.KeyboardEvent) => {\n        if (event.key === 'Escape') {\n          setValue('')\n          onReset()\n        }\n      },\n      [onResetProp, setValue]\n    )\n\n    const onReset = () => {\n      setValue('')\n      onResetProp?.()\n      inputRef.current?.focus()\n    }\n\n    const btnSize = size === 'lg' ? 'sm' : 'xs'\n\n    const showReset = value && !props.isDisabled\n\n    return (\n      <InputGroup size={size} width={width}>\n        <InputLeftElement>{icon || <SearchIcon />}</InputLeftElement>\n        <Input\n          type=\"text\"\n          placeholder={placeholder}\n          variant={variant}\n          size={size}\n          value={value}\n          ref={useMergeRefs(ref, inputRef)}\n          sx={styles.input}\n          onChange={callAllHandlers(onChange, onChangeProp)}\n          onKeyDown={callAllHandlers(onKeyDown, onKeyDownProp)}\n          {...inputProps}\n        />\n        <InputRightElement>\n          {showReset ? (\n            <IconButton\n              onClick={onReset}\n              size={btnSize}\n              variant=\"ghost\"\n              aria-label=\"Reset search\"\n              icon={resetIcon || <CloseIcon />}\n              sx={styles.reset}\n            />\n          ) : (\n            rightElement\n          )}\n        </InputRightElement>\n      </InputGroup>\n    )\n  }\n)\n\nSearchInput.displayName = 'SearchInput'\n","import * as React from 'react'\n\nimport {\n  chakra,\n  useTheme,\n  useToast,\n  UseToastOptions,\n  ToastId,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  AlertIconProps,\n  CloseButton,\n  ButtonGroup,\n  Spinner,\n  useMultiStyleConfig,\n  AlertProps,\n  ToastPosition,\n} from '@chakra-ui/react'\nimport { runIfFn } from '@chakra-ui/utils'\n\nconst AlertSpinner: React.FC<AlertIconProps> = (props) => {\n  const styles = useMultiStyleConfig('Alert', props)\n  return (\n    <chakra.span\n      display=\"inherit\"\n      alignItems=\"center\"\n      {...props}\n      __css={styles.icon}\n    >\n      <Spinner size=\"sm\" />\n    </chakra.span>\n  )\n}\n\nexport interface SnackbarProps\n  extends Omit<AlertProps, 'id' | 'title' | 'position'> {\n  id?: ToastId\n  title?: React.ReactNode\n  icon?: React.ReactNode\n  action?: React.ReactNode\n  description?: React.ReactNode\n  position?: ToastPosition\n  isClosable?: boolean\n  onClose?: () => void\n}\n\nexport const Snackbar: React.FC<SnackbarProps> = (props) => {\n  const {\n    status,\n    variant,\n    id,\n    title,\n    icon,\n    isClosable,\n    onClose,\n    description,\n    action,\n  } = props\n\n  const theme = useTheme()\n\n  // Use the snackbar variant if it exists, otherwise default to solid\n  const defaultVariant = theme.components?.Alert?.variants?.snackbar\n    ? 'snackbar'\n    : 'solid'\n\n  const alertTitleId =\n    typeof id !== 'undefined' ? `toast-${id}-title` : undefined\n\n  return (\n    <Alert\n      status={status}\n      variant={variant || defaultVariant}\n      id={id !== 'undefined' ? `toast-${id}` : undefined}\n      alignItems=\"start\"\n      borderRadius=\"md\"\n      boxShadow=\"lg\"\n      textAlign=\"start\"\n      width=\"auto\"\n      aria-labelledby={alertTitleId}\n    >\n      {icon === null ? null : icon ? icon : <AlertIcon />}\n      <chakra.div flex=\"1\" maxWidth=\"100%\">\n        {title && <AlertTitle id={alertTitleId}>{title}</AlertTitle>}\n        {description && (\n          <AlertDescription display=\"block\">{description}</AlertDescription>\n        )}\n      </chakra.div>\n      {(action || isClosable) && (\n        <ButtonGroup size=\"xs\" variant=\"ghost\" ms=\"2\">\n          {action}\n          {isClosable && <CloseButton size=\"sm\" onClick={onClose} />}\n        </ButtonGroup>\n      )}\n    </Alert>\n  )\n}\n\nexport interface UseSnackbarOptions extends UseToastOptions {\n  icon?: React.ReactNode\n  action?: React.ReactNode\n  variant?:\n    | 'snackbar'\n    | 'subtle'\n    | 'solid'\n    | 'left-accent'\n    | 'top-accent'\n    | string\n}\n\nexport type SnackbarOptions = UseSnackbarOptions | string\n\nexport interface SnackbarPromiseOptions {\n  loading?: SnackbarOptions\n  success: SnackbarOptions | ((data: any) => SnackbarOptions)\n  error: SnackbarOptions | ((error: any) => SnackbarOptions)\n}\n\n/**\n * The snackbar component is used to give feedback after certain actions.\n *\n * @see Docs https://saas-ui.dev/docs/components/feedback/snackbar\n */\nexport function useSnackbar(defaultOptions?: UseSnackbarOptions) {\n  const toast = useToast(defaultOptions)\n\n  const parseOptions = React.useCallback(\n    (options: SnackbarOptions): UseSnackbarOptions => {\n      if (typeof options === 'string') {\n        return {\n          title: options,\n        }\n      }\n      return options\n    },\n    []\n  )\n\n  return React.useMemo(() => {\n    const snackbar = (options: SnackbarOptions): ToastId => {\n      const opts = parseOptions(options)\n      useToast\n      return toast({\n        render: (props) => (\n          <Snackbar {...defaultOptions} {...opts} {...props} />\n        ),\n        ...opts,\n      })\n    }\n\n    snackbar.info = (options: SnackbarOptions) =>\n      snackbar({\n        status: 'info',\n        ...parseOptions(options),\n      })\n\n    snackbar.success = (options: SnackbarOptions) =>\n      snackbar({\n        status: 'success',\n        ...parseOptions(options),\n      })\n\n    snackbar.error = (options: SnackbarOptions) =>\n      snackbar({\n        status: 'error',\n        ...parseOptions(options),\n      })\n\n    /**\n     * A utility function to show a loading spinner while a promise resolves.\n     * `success` and `error` accept an optional function that receives the result or error of the promise.\n     *\n     * if `error` is a function, it will not throw the error, and you can handle it in the callback function.\n     */\n    snackbar.promise = async (\n      promise: Promise<unknown>,\n      { loading, success, error }: SnackbarPromiseOptions\n    ) => {\n      let toastId: ToastId | undefined\n      if (loading) {\n        const options = parseOptions(loading)\n        toastId = snackbar({\n          status: 'info',\n          duration: null,\n          icon: <AlertSpinner />,\n          ...options,\n        })\n      }\n      return promise\n        .then((result) => {\n          const options: UseSnackbarOptions = {\n            status: 'success',\n            duration: 5000,\n            ...parseOptions(runIfFn(success, result)),\n          }\n          if (toastId) {\n            snackbar.update(toastId, options)\n          } else {\n            snackbar(options)\n          }\n          return result\n        })\n        .catch((e) => {\n          const options: UseSnackbarOptions = {\n            title: e.name,\n            description: e.description,\n            status: 'error',\n            duration: 5000,\n            ...parseOptions(runIfFn(error, e)),\n          }\n\n          if (toastId) {\n            snackbar.update(toastId, options)\n          } else {\n            snackbar(options)\n          }\n\n          if (typeof error !== 'function') {\n            throw e\n          }\n        })\n    }\n\n    snackbar.update = (toastId: ToastId, options: UseToastOptions) => {\n      return toast.update(toastId, {\n        render: (props) => (\n          <Snackbar {...defaultOptions} {...options} {...props} />\n        ),\n        ...options,\n      })\n    }\n    snackbar.isActive = toast.isActive\n    snackbar.close = toast.close\n    snackbar.closeAll = toast.closeAll\n\n    return snackbar\n  }, [toast, defaultOptions])\n}\n\nexport type UseSnackbarReturn = ReturnType<typeof useSnackbar>\n","import {\n  CreateStandAloneToastParam,\n  createStandaloneToast,\n} from '@chakra-ui/react'\nimport { Snackbar } from './use-snackbar'\n\nexport const createStandAloneSnackbar = (\n  options: CreateStandAloneToastParam\n) => {\n  const { ToastContainer: SnackbarContainer, toast: snackbar } =\n    createStandaloneToast({\n      ...options,\n      defaultOptions: {\n        render: (props) => <Snackbar {...props} />,\n        ...options.defaultOptions,\n      },\n    })\n\n  return {\n    SnackbarContainer,\n    snackbar,\n  }\n}\n","import * as React from 'react'\n\nimport {\n  chakra,\n  forwardRef,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n  createStylesContext,\n  Stepper,\n  StepperProps,\n  StepSeparator,\n  Collapse,\n  Step,\n  StepIndicator,\n  StepStatus,\n  StepIcon,\n  StepNumber,\n  Box,\n  StepTitle,\n  StepDescription,\n  ThemingProps,\n} from '@chakra-ui/react'\n\nimport { getChildOfType, getChildrenOfType } from '@saas-ui/react-utils'\nimport { cx } from '@chakra-ui/utils'\n\nimport {\n  StepperProvider,\n  useStepper,\n  useStep,\n  useStepperContext,\n} from './use-stepper'\n\nconst [StylesProvider, useStyles] = createStylesContext('Stepper')\n\nexport interface StepsProps\n  extends Omit<HTMLChakraProps<'div'>, 'onChange'>,\n    ThemingProps<'Stepper'> {\n  /**\n   * The orientation of the stepper.\n   */\n  orientation?: 'horizontal' | 'vertical'\n  /**\n   * The current step index or name.\n   */\n  step?: number | string\n  /**\n   * The current step index.\n   */\n  index?: number\n  /**\n   * Callback invoked when the step changes.\n   */\n  onChange?: (index: number) => void\n  /**\n   * Props to pass to the stepper component.\n   *\n   * @see Docs https://chakra-ui.com/docs/feedback/stepper#props\n   */\n  stepperProps?: StepperProps\n}\n\n/**\n * Wrapper element containing the steps.\n */\nexport const Steps = forwardRef<StepsProps, 'div'>((props, ref) => {\n  const {\n    children,\n    orientation = 'horizontal',\n    index,\n    step,\n    onChange,\n    variant,\n    colorScheme,\n    size,\n    stepperProps,\n    ...rest\n  } = props\n  const styles = useMultiStyleConfig('Stepper', props)\n\n  const context = useStepper({\n    step: step ?? index,\n    onChange,\n  })\n\n  const { activeIndex } = context\n\n  const isVertical = orientation === 'vertical'\n\n  const steps = getChildrenOfType(children, StepsItem)\n\n  const itemStyles = {\n    position: 'relative',\n    ...styles.item,\n  }\n\n  const elements = steps.reduce<React.ReactElement[]>((memo, step, i, arr) => {\n    const item = React.cloneElement(step, {\n      key: i,\n      ...step.props,\n      isActive: activeIndex === i,\n      isCompleted: step.props.isCompleted || activeIndex > i,\n    })\n\n    if (isVertical) {\n      memo.push(\n        <chakra.div\n          className=\"sui-steps__item\"\n          key={`content-${i}`}\n          __css={itemStyles}\n        >\n          {item}\n          <StepsContent isOpen={activeIndex === i} orientation={orientation}>\n            {step.props.children}\n          </StepsContent>\n          {i < arr.length - 1 ? <StepSeparator /> : null}\n        </chakra.div>\n      )\n    } else {\n      memo.push(item)\n    }\n\n    return memo\n  }, [])\n\n  const completed = getChildOfType(children, StepsCompleted)\n\n  const hasContent = steps[activeIndex]?.props?.children\n\n  const content =\n    activeIndex >= steps.length ? (\n      completed\n    ) : !isVertical && hasContent ? (\n      <StepsContent orientation={orientation}>\n        {steps[activeIndex]?.props?.children}\n      </StepsContent>\n    ) : null\n\n  return (\n    <StylesProvider value={styles}>\n      <StepperProvider value={context}>\n        <chakra.div\n          ref={ref}\n          __css={styles.container}\n          {...rest}\n          className={cx('sui-steps', props.className)}\n        >\n          <Stepper\n            index={activeIndex}\n            orientation={orientation}\n            variant={variant}\n            colorScheme={colorScheme}\n            size={size}\n            {...stepperProps}\n          >\n            {elements}\n          </Stepper>\n          {content}\n        </chakra.div>\n      </StepperProvider>\n    </StylesProvider>\n  )\n})\n\nSteps.displayName = 'Steps'\n\nexport interface StepsItemProps extends Omit<HTMLChakraProps<'div'>, 'title'> {\n  /**\n   * Custom render function\n   */\n  render?: (props?: any) => React.ReactElement\n  /**\n   * The step name\n   */\n  name?: string\n  /**\n   * The step title\n   */\n  title: React.ReactNode\n  /**\n   * The step description\n   */\n  description?: React.ReactNode\n  /**\n   * Show an icon instead of the step number\n   */\n  icon?: React.ReactNode\n  /**\n   * Show the step as active\n   */\n  isActive?: boolean\n  /**\n   * Show the step as completed\n   */\n  isCompleted?: boolean\n}\n\nexport const StepsItem: React.FC<StepsItemProps> = (props) => {\n  const { render, icon, title, description, ...rest } = props\n\n  const step = useStep(rest)\n\n  if (render) {\n    return render({\n      ...step,\n      ...props,\n    })\n  }\n\n  return (\n    <Step>\n      <StepIndicator>\n        <StepStatus\n          complete={<StepIcon />}\n          incomplete={<StepNumber children={icon} />}\n          active={<StepNumber />}\n        />\n      </StepIndicator>\n\n      <Box flexShrink=\"0\">\n        <StepTitle>{title}</StepTitle>\n        {description && <StepDescription>{description}</StepDescription>}\n      </Box>\n\n      <StepSeparator />\n    </Step>\n  )\n}\n\nStepsItem.displayName = 'StepsItem'\n\nexport interface StepperContentProps extends HTMLChakraProps<'div'> {\n  /**\n   * Show or hide the content, only when orientation is vertical.\n   */\n  isOpen?: boolean\n  /**\n   * The orientation of the stepper.\n   */\n  orientation?: 'horizontal' | 'vertical'\n}\n\n/**\n * Renders the step content, is collapsible.\n */\nexport const StepsContent: React.FC<StepperContentProps> = (props) => {\n  const { children, isOpen = true, orientation = 'horizontal', ...rest } = props\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={styles.content}\n      className={cx('sui-steps__content', props.className)}\n      data-orientation={orientation}\n    >\n      {orientation === 'vertical' ? (\n        <Collapse\n          in={isOpen}\n          style={{ overflow: isOpen ? 'visible' : 'hidden' }}\n        >\n          <chakra.div p=\"2px\">{isOpen ? children : null}</chakra.div>\n        </Collapse>\n      ) : (\n        children\n      )}\n    </chakra.div>\n  )\n}\n\nStepsContent.displayName = 'StepsContent'\n\n/**\n * Shown when all steps have completed.\n */\nexport const StepsCompleted: React.FC<HTMLChakraProps<'div'>> = (props) => {\n  const completedStyles = {}\n  return (\n    <chakra.div\n      __css={completedStyles}\n      {...props}\n      className={cx('sui-steps__completed', props.className)}\n    />\n  )\n}\n\nStepsCompleted.displayName = 'StepsCompleted'\n","import * as React from 'react'\n\nimport { createContext } from '@chakra-ui/react-utils'\n\nexport const [StepperProvider, useStepperContext] =\n  createContext<UseStepperReturn>({\n    name: 'StepperContext',\n    errorMessage:\n      'useStepperContext: `context` is undefined. Seems you forgot to wrap stepper components in `<Stepper />`',\n  })\n\nexport interface UseStepperProps {\n  step?: number | string\n  isCompleted?: boolean\n  onChange?(index: number): void\n}\n\nexport function useStepper(props: UseStepperProps) {\n  const { step, onChange } = props\n\n  const [activeIndex, setIndex] = React.useState(0)\n\n  const stepsRef = React.useRef<string[]>([])\n\n  const [, onUpdate] = React.useState(Date.now())\n\n  const registerStep = React.useCallback(\n    (name: string) => {\n      const newSteps = [...stepsRef.current]\n\n      if (newSteps.indexOf(name) === -1) {\n        newSteps.push(name)\n      }\n\n      stepsRef.current = newSteps\n      onUpdate(Date.now())\n    },\n    [stepsRef, onUpdate]\n  )\n\n  const unregisterStep = (name: string) => {\n    stepsRef.current = stepsRef.current.slice(stepsRef.current.indexOf(name), 1)\n  }\n\n  const setStep = (name: string) => {\n    const i = stepsRef.current.indexOf(name)\n    if (i !== -1) {\n      setIndex(i)\n    }\n  }\n\n  const nextStep = () => {\n    setIndex(activeIndex + 1)\n  }\n\n  const prevStep = () => {\n    setIndex(activeIndex - 1)\n  }\n\n  React.useEffect(() => {\n    if (typeof step === 'string') {\n      setStep(step)\n    } else if (typeof step === 'number') {\n      setIndex(step)\n    } else if (activeIndex === -1) {\n      setIndex(0) // initiate the stepper by activating the first step\n    }\n  }, [step])\n\n  React.useEffect(() => {\n    onChange?.(activeIndex)\n  }, [activeIndex, onChange])\n\n  const context = {\n    stepsRef,\n    activeStep: stepsRef.current[activeIndex],\n    activeIndex,\n    isFirstStep: activeIndex === 0,\n    isLastStep: activeIndex === stepsRef.current.length - 1,\n    isCompleted: activeIndex >= stepsRef.current.length,\n    setIndex,\n    setStep,\n    nextStep,\n    prevStep,\n    registerStep,\n    unregisterStep,\n  }\n\n  return context\n}\n\nexport type UseStepperReturn = ReturnType<typeof useStepper>\n\nexport interface UseStepProps {\n  name?: string\n  isActive?: boolean\n  isCompleted?: boolean\n}\n\nexport function useStep(props: UseStepProps) {\n  const { name, isActive, isCompleted } = props\n\n  const { registerStep, unregisterStep, activeStep } = useStepperContext()\n\n  React.useEffect(() => {\n    if (!name) {\n      return\n    }\n    registerStep(name)\n\n    return () => {\n      unregisterStep(name)\n    }\n  }, [])\n\n  return {\n    isActive: name ? activeStep === name : isActive,\n    isCompleted,\n  }\n}\n\n/**\n * Returns props for a Prev Button\n */\nexport function useStepperPrevButton({ label = 'Back' } = {}) {\n  const { isFirstStep, prevStep } = useStepperContext()\n\n  return {\n    isDisabled: isFirstStep,\n    onClick: prevStep,\n    children: label,\n  }\n}\n\n/**\n * Returns props for a Next Button\n */\nexport function useStepperNextButton({\n  label = 'Next',\n  submitLabel = 'Submit',\n} = {}) {\n  const { isLastStep, isCompleted, nextStep } = useStepperContext()\n\n  return {\n    isDisabled: isCompleted,\n    onClick: nextStep,\n    children: isLastStep ? submitLabel : label,\n  }\n}\n","import * as React from 'react'\n\nimport { chakra, HTMLChakraProps } from '@chakra-ui/react'\n\nimport { cx } from '@chakra-ui/utils'\n\nexport interface Web3AddressProps extends HTMLChakraProps<'span'> {\n  address: string\n  startLength?: number\n  endLength?: number\n}\n/**\n * Display Web3 addresses in a more readable format.\n *\n * @see Docs https://saas-ui.dev/docs/components/web3/address\n */\nexport const Web3Address: React.FC<Web3AddressProps> = (props) => {\n  const { address, startLength = 6, endLength = 4, ...rest } = props\n  const start = address.slice(0, startLength)\n  const end = address.slice(address.length - endLength, address.length)\n\n  return (\n    <chakra.span {...rest} className={cx('sui-web3-address', props.className)}>\n      {start}...{end}\n    </chakra.span>\n  )\n}\n\nWeb3Address.displayName = 'Web3Address'\n","import React from 'react'\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  createStylesContext,\n  useMultiStyleConfig,\n  ThemingProps,\n} from '@chakra-ui/react'\nimport { cx, dataAttr } from '@chakra-ui/utils'\n\nconst [StylesProvider, useStyles] = createStylesContext('SuiTimeline')\n\nexport const useTimelineStyles = useStyles\n\nexport interface TimelineProps\n  extends HTMLChakraProps<'ul'>,\n    ThemingProps<'SuiTimeline'> {}\n\n/**\n * Display a list of events in chronological order.\n *\n * @see Docs https://saas-ui.dev/docs/components/data-display/timeline\n */\nexport const Timeline: React.FC<TimelineProps> = (props) => {\n  const { children, orientation = 'vertical', ...rest } = props\n\n  const styles = useMultiStyleConfig('SuiTimeline', props)\n\n  const timelineStyles = {\n    position: 'relative',\n    listStyle: 'none',\n    ...styles.container,\n  }\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.ul\n        {...rest}\n        __css={timelineStyles}\n        className={cx('sui-timeline', props.className)}\n        data-orientation=\"vertical\"\n      >\n        {children}\n      </chakra.ul>\n    </StylesProvider>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n\nexport interface TimelineItemProps extends HTMLChakraProps<'li'> {}\n\nexport const TimelineItem = forwardRef<TimelineItemProps, 'li'>(\n  (props, ref) => {\n    const { children, ...rest } = props\n\n    const styles = useStyles()\n\n    return (\n      <chakra.li\n        {...rest}\n        ref={ref}\n        __css={styles.item}\n        className={cx('sui-timeline__item', props.className)}\n      >\n        {children}\n      </chakra.li>\n    )\n  }\n)\n\nTimelineItem.displayName = 'TimelineItem'\n\nexport interface TimelineContentProps extends HTMLChakraProps<'div'> {}\n\nexport const TimelineContent: React.FC<TimelineContentProps> = (props) => {\n  const { children, ...rest } = props\n\n  const styles = useStyles()\n\n  const contentStyles = {\n    flex: 1,\n    ...styles.content,\n  }\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={contentStyles}\n      className={cx('sui-timeline__content', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nTimelineContent.displayName = 'TimelineContent'\n\nexport interface TimelineSeparatorProps extends HTMLChakraProps<'div'> {}\n\nexport const TimelineSeparator: React.FC<TimelineSeparatorProps> = (props) => {\n  const { children, ...rest } = props\n\n  const styles = useStyles()\n\n  const separatorStyles = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flexShrink: 0,\n    ...styles.separator,\n  }\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={separatorStyles}\n      className={cx('sui-timeline__separator', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nTimelineSeparator.displayName = 'TimelineSeparator'\n\nexport interface TimelineDotProps extends HTMLChakraProps<'div'> {}\n\nexport const TimelineDot: React.FC<TimelineDotProps> = (props) => {\n  const { children, ...rest } = props\n\n  const styles = useStyles()\n\n  const dotStyles = {\n    ...styles.dot,\n  }\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={dotStyles}\n      className={cx('sui-timeline__dot', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nTimelineDot.displayName = 'TimelineDot'\n\nexport interface TimelineIconProps extends HTMLChakraProps<'div'> {}\n\nexport const TimelineIcon: React.FC<TimelineIconProps> = (props) => {\n  const { children, ...rest } = props\n\n  const styles = useStyles()\n\n  const iconStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    zIndex: 1,\n    ...styles.icon,\n  }\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={iconStyles}\n      className={cx('sui-timeline__icon', props.className)}\n      data-dot={dataAttr(!children)}\n    >\n      {children || <TimelineDot />}\n    </chakra.div>\n  )\n}\n\nTimelineIcon.displayName = 'TimelineIcon'\n\nexport interface TimelineTrackProps extends HTMLChakraProps<'div'> {}\n\nexport const TimelineTrack: React.FC<TimelineTrackProps> = (props) => {\n  const { children, ...rest } = props\n\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      {...rest}\n      __css={styles.track}\n      className={cx('sui-timeline__track', props.className)}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nTimelineTrack.displayName = 'TimelineTrack'\n","import {\n  chakra,\n  useStyleConfig,\n  IconProps,\n  ThemingProps,\n  forwardRef,\n  omitThemingProps,\n} from '@chakra-ui/react'\nimport { cx } from '@chakra-ui/utils'\nimport { cloneElement, isValidElement } from 'react'\n\nexport interface IconBadgeProps\n  extends IconProps,\n    ThemingProps<'SuiIconBadge'> {\n  /**\n   * The icon to be used in the button.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * If `true`, the badge will be perfectly round. Else, it'll be slightly round\n   *\n   * @default false\n   */\n  isRound?: boolean\n  /**\n   * A11y: A label that describes the icon\n   */\n  'aria-label'?: string\n}\n\nexport const IconBadge = forwardRef<IconBadgeProps, 'div'>((props, ref) => {\n  const { icon, children, isRound, 'aria-label': ariaLabel, ...rest } = props\n  const styles = useStyleConfig('SuiIconBadge', props)\n\n  const itemProps = omitThemingProps(rest)\n\n  /**\n   * Passing the icon as prop or children should work\n   */\n  const element = icon || children\n  const _children = isValidElement(element)\n    ? cloneElement(element as any, {\n        'aria-hidden': true,\n        focusable: false,\n      })\n    : null\n\n  const __css = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...styles,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={__css}\n      borderRadius={isRound ? 'full' : undefined}\n      aria-label={ariaLabel}\n      {...itemProps}\n      className={cx('sui-icon-badge', props.className)}\n    >\n      {_children}\n    </chakra.div>\n  )\n})\n"],"mappings":"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","names":["cx","chakra","jsx","chakra","cx","jsx","React","jsx","chakra","jsx","chakra","jsx","React","createStylesContext","useMultiStyleConfig","omitThemingProps","forwardRef","cx","createContext","createContext","jsx","jsxs","StylesProvider","useStyles","createStylesContext","forwardRef","useMultiStyleConfig","omitThemingProps","cx","chakra","forwardRef","omitThemingProps","ButtonGroup","useMultiStyleConfig","createStylesContext","Icon","cx","createContext","Icon","jsx","CheckIcon","AnimatePresence","React","chakra","forwardRef","jsx","ScaleFade","AnimatePresence","motion","forwardRef","jsx","variants","SlideFade","motion","jsx","chakra","jsx","StylesProvider","useStyles","createStylesContext","CheckIcon","createContext","forwardRef","omitThemingProps","useMultiStyleConfig","AnimatePresence","cx","chakra","ButtonGroup","Icon","React","createContext","useDisclosure","useId","cx","props","rest","React","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","createStylesContext","Icon","useId","callAllHandlers","cx","createContext","jsx","jsxs","StylesProvider","useStyles","_a","forwardRef","jsx","Link","forwardRef","useState","chakra","createStylesContext","useMultiStyleConfig","omitThemingProps","cx","AnimatePresence","motion","jsx","StylesProvider","useStyles","Motion","chakra","motion","useMultiStyleConfig","omitThemingProps","useState","jsx","StylesProvider","AnimatePresence","cx","useStyles","Icon","jsx","jsxs","jsx","jsxs","React","useCallback","useRef","useState","chakra","Menu","MenuList","forwardRef","createContext","callAllHandlers","jsx","chakra","forwardRef","useMultiStyleConfig","omitThemingProps","createStylesContext","cx","Fragment","jsx","jsxs","StylesProvider","useStyles","React","chakra","forwardRef","useMultiStyleConfig","omitThemingProps","createStylesContext","cx","jsx","jsxs","StylesProvider","useStyles","dataAttr","useEffect","useRef","useState","React","useState","useEffect","useRef","isBrowser","useRef","useEffect","useRef","useState","useEffect","props","dataAttr","createContext","useContext","createContext","chakra","forwardRef","useMultiStyleConfig","motion","cx","jsx","chakra","motion","forwardRef","useMultiStyleConfig","chakra","forwardRef","cx","jsx","forwardRef","chakra","cx","chakra","forwardRef","cx","jsx","forwardRef","chakra","cx","chakra","forwardRef","cx","dataAttr","jsx","forwardRef","chakra","cx","dataAttr","chakra","forwardRef","cx","dataAttr","jsx","forwardRef","Link","chakra","dataAttr","cx","React","chakra","omitThemingProps","useMultiStyleConfig","useBreakpointValue","useDisclosure","forwardRef","useTheme","useStyleConfig","cx","dataAttr","runIfFn","motion","AnimatePresence","createContext","callAllHandlers","createContext","createContext","jsx","MotionBox","chakra","motion","forwardRef","useMultiStyleConfig","useTheme","omitThemingProps","useBreakpointValue","useDisclosure","variants","cx","dataAttr","useStyleConfig","runIfFn","AnimatePresence","chakra","useStyleConfig","cx","jsx","React","chakra","useMultiStyleConfig","runIfFn","cx","createContext","jsx","jsxs","cx","chakra","isOpen","runIfFn","useMultiStyleConfig","React","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","Tooltip","cx","dataAttr","jsx","jsxs","forwardRef","chakra","cx","omitThemingProps","Link","useMultiStyleConfig","dataAttr","Tooltip","React","forwardRef","IconButton","useMultiStyleConfig","useMergeRefs","callAllHandlers","jsx","jsxs","forwardRef","useMultiStyleConfig","useMergeRefs","callAllHandlers","IconButton","React","chakra","useTheme","CloseButton","ButtonGroup","Spinner","useMultiStyleConfig","runIfFn","jsx","jsxs","jsx","React","chakra","forwardRef","useMultiStyleConfig","createStylesContext","Collapse","cx","React","createContext","jsx","jsxs","StylesProvider","useStyles","createStylesContext","forwardRef","useMultiStyleConfig","step","chakra","cx","Collapse","chakra","cx","jsxs","chakra","forwardRef","createStylesContext","useMultiStyleConfig","cx","dataAttr","jsx","StylesProvider","useStyles","chakra","useStyleConfig","forwardRef","omitThemingProps","cx","cloneElement","isValidElement","jsx"]}