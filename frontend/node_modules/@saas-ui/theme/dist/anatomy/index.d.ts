declare const appShellAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U extends string>(...parts: U[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                            keys: (V | U | U_1 | U_2 | U_3)[];
                            __type: V | U | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2, string>;
                        classnames: () => Record<V | U | U_1 | U_2, string>;
                        keys: (V | U | U_1 | U_2)[];
                        __type: V | U | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1, string>;
                    classnames: () => Record<V | U | U_1, string>;
                    keys: (V | U | U_1)[];
                    __type: V | U | U_1;
                }, "parts">;
                selectors: () => Record<V | U, string>;
                classnames: () => Record<V | U, string>;
                keys: (V | U)[];
                __type: V | U;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U extends string>(...parts: U[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                keys: (V | U | U_1 | U_2 | U_3)[];
                                __type: V | U | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2, string>;
                            classnames: () => Record<V | U | U_1 | U_2, string>;
                            keys: (V | U | U_1 | U_2)[];
                            __type: V | U | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1, string>;
                        classnames: () => Record<V | U | U_1, string>;
                        keys: (V | U | U_1)[];
                        __type: V | U | U_1;
                    }, "parts">;
                    selectors: () => Record<V | U, string>;
                    classnames: () => Record<V | U, string>;
                    keys: (V | U)[];
                    __type: V | U;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U extends string>(...parts: U[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                    keys: (V | U | U_1 | U_2 | U_3)[];
                                    __type: V | U | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2, string>;
                                classnames: () => Record<V | U | U_1 | U_2, string>;
                                keys: (V | U | U_1 | U_2)[];
                                __type: V | U | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1, string>;
                            classnames: () => Record<V | U | U_1, string>;
                            keys: (V | U | U_1)[];
                            __type: V | U | U_1;
                        }, "parts">;
                        selectors: () => Record<V | U, string>;
                        classnames: () => Record<V | U, string>;
                        keys: (V | U)[];
                        __type: V | U;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U extends string>(...parts: U[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                        keys: (V | U | U_1 | U_2 | U_3)[];
                                        __type: V | U | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2, string>;
                                    classnames: () => Record<V | U | U_1 | U_2, string>;
                                    keys: (V | U | U_1 | U_2)[];
                                    __type: V | U | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1, string>;
                                classnames: () => Record<V | U | U_1, string>;
                                keys: (V | U | U_1)[];
                                __type: V | U | U_1;
                            }, "parts">;
                            selectors: () => Record<V | U, string>;
                            classnames: () => Record<V | U, string>;
                            keys: (V | U)[];
                            __type: V | U;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U extends string>(...parts: U[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                            keys: (V | U | U_1 | U_2 | U_3)[];
                                            __type: V | U | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2, string>;
                                        classnames: () => Record<V | U | U_1 | U_2, string>;
                                        keys: (V | U | U_1 | U_2)[];
                                        __type: V | U | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1, string>;
                                    classnames: () => Record<V | U | U_1, string>;
                                    keys: (V | U | U_1)[];
                                    __type: V | U | U_1;
                                }, "parts">;
                                selectors: () => Record<V | U, string>;
                                classnames: () => Record<V | U, string>;
                                keys: (V | U)[];
                                __type: V | U;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U extends string>(...parts: U[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                keys: (V | U | U_1 | U_2 | U_3)[];
                                                __type: V | U | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2, string>;
                                            classnames: () => Record<V | U | U_1 | U_2, string>;
                                            keys: (V | U | U_1 | U_2)[];
                                            __type: V | U | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1, string>;
                                        classnames: () => Record<V | U | U_1, string>;
                                        keys: (V | U | U_1)[];
                                        __type: V | U | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V | U, string>;
                                    classnames: () => Record<V | U, string>;
                                    keys: (V | U)[];
                                    __type: V | U;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U extends string>(...parts: U[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U | U_1 | U_2 | U_3)[];
                                                    __type: V | U | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2, string>;
                                                classnames: () => Record<V | U | U_1 | U_2, string>;
                                                keys: (V | U | U_1 | U_2)[];
                                                __type: V | U | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1, string>;
                                            classnames: () => Record<V | U | U_1, string>;
                                            keys: (V | U | U_1)[];
                                            __type: V | U | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V | U, string>;
                                        classnames: () => Record<V | U, string>;
                                        keys: (V | U)[];
                                        __type: V | U;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U extends string>(...parts: U[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U | U_1 | U_2 | U_3)[];
                                                        __type: V | U | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2, string>;
                                                    keys: (V | U | U_1 | U_2)[];
                                                    __type: V | U | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1, string>;
                                                classnames: () => Record<V | U | U_1, string>;
                                                keys: (V | U | U_1)[];
                                                __type: V | U | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V | U, string>;
                                            classnames: () => Record<V | U, string>;
                                            keys: (V | U)[];
                                            __type: V | U;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U extends string>(...parts: U[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U | U_1 | U_2 | U_3)[];
                                                            __type: V | U | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2, string>;
                                                        keys: (V | U | U_1 | U_2)[];
                                                        __type: V | U | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1, string>;
                                                    classnames: () => Record<V | U | U_1, string>;
                                                    keys: (V | U | U_1)[];
                                                    __type: V | U | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V | U, string>;
                                                classnames: () => Record<V | U, string>;
                                                keys: (V | U)[];
                                                __type: V | U;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_19 extends string>(...parts: U_19[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U extends string>(...parts: U[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                                    __type: V | U | U_1 | U_2 | U_3 | U_4;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                                keys: (V | U | U_1 | U_2 | U_3)[];
                                                                __type: V | U | U_1 | U_2 | U_3;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2, string>;
                                                            keys: (V | U | U_1 | U_2)[];
                                                            __type: V | U | U_1 | U_2;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1, string>;
                                                        classnames: () => Record<V | U | U_1, string>;
                                                        keys: (V | U | U_1)[];
                                                        __type: V | U | U_1;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U, string>;
                                                    classnames: () => Record<V | U, string>;
                                                    keys: (V | U)[];
                                                    __type: V | U;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_20 extends string>(...parts: U_20[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18 | U_19, string>;
                                            classnames: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18 | U_19, string>;
                                            keys: ("container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18 | U_19)[];
                                            __type: "container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18 | U_19;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                        classnames: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                        keys: ("container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                        __type: "container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                    classnames: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                    keys: ("container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                    __type: "container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                }, "parts">;
                                selectors: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                classnames: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                keys: ("container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                __type: "container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                            }, "parts">;
                            selectors: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                            classnames: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                            keys: ("container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                            __type: "container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                        }, "parts">;
                        selectors: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                        classnames: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                        keys: ("container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14)[];
                        __type: "container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13 | U_14;
                    }, "parts">;
                    selectors: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13, string>;
                    classnames: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13, string>;
                    keys: ("container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13)[];
                    __type: "container" | "inner" | "main" | U_10 | U_11 | U_12 | U_13;
                }, "parts">;
                selectors: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12, string>;
                classnames: () => Record<"container" | "inner" | "main" | U_10 | U_11 | U_12, string>;
                keys: ("container" | "inner" | "main" | U_10 | U_11 | U_12)[];
                __type: "container" | "inner" | "main" | U_10 | U_11 | U_12;
            }, "parts">;
            selectors: () => Record<"container" | "inner" | "main" | U_10 | U_11, string>;
            classnames: () => Record<"container" | "inner" | "main" | U_10 | U_11, string>;
            keys: ("container" | "inner" | "main" | U_10 | U_11)[];
            __type: "container" | "inner" | "main" | U_10 | U_11;
        }, "parts">;
        selectors: () => Record<"container" | "inner" | "main" | U_10, string>;
        classnames: () => Record<"container" | "inner" | "main" | U_10, string>;
        keys: ("container" | "inner" | "main" | U_10)[];
        __type: "container" | "inner" | "main" | U_10;
    }, "parts">;
    selectors: () => Record<"container" | "inner" | "main", string>;
    classnames: () => Record<"container" | "inner" | "main", string>;
    keys: ("container" | "inner" | "main")[];
    __type: "container" | "inner" | "main";
}, "parts">;
declare const emptyStateAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11, string>;
                keys: ("container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11)[];
                __type: "container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10, string>;
            classnames: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10, string>;
            keys: ("container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10)[];
            __type: "container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U, string>;
        classnames: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U, string>;
        keys: ("container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U)[];
        __type: "container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer" | U;
    }, "parts">;
    selectors: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer", string>;
    classnames: () => Record<"container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer", string>;
    keys: ("container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer")[];
    __type: "container" | "body" | "icon" | "title" | "descripton" | "actions" | "footer";
}, "parts">;
declare const bannerAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11, string>;
                keys: ("container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11)[];
                __type: "container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10, string>;
            classnames: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10, string>;
            keys: ("container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10)[];
            __type: "container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U, string>;
        classnames: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U, string>;
        keys: ("container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U)[];
        __type: "container" | "icon" | "title" | "actions" | "content" | "description" | "close" | U;
    }, "parts">;
    selectors: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close", string>;
    classnames: () => Record<"container" | "icon" | "title" | "actions" | "content" | "description" | "close", string>;
    keys: ("container" | "icon" | "title" | "actions" | "content" | "description" | "close")[];
    __type: "container" | "icon" | "title" | "actions" | "content" | "description" | "close";
}, "parts">;
declare const hotkeysAnantomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11, string>;
                keys: ("container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11)[];
                __type: "container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10, string>;
            classnames: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10, string>;
            keys: ("container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10)[];
            __type: "container" | "group" | "groupTitle" | "item" | "command" | "then" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U, string>;
        classnames: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then" | U, string>;
        keys: ("container" | "group" | "groupTitle" | "item" | "command" | "then" | U)[];
        __type: "container" | "group" | "groupTitle" | "item" | "command" | "then" | U;
    }, "parts">;
    selectors: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then", string>;
    classnames: () => Record<"container" | "group" | "groupTitle" | "item" | "command" | "then", string>;
    keys: ("container" | "group" | "groupTitle" | "item" | "command" | "then")[];
    __type: "container" | "group" | "groupTitle" | "item" | "command" | "then";
}, "parts">;
declare const loadingOverlayAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "overlay" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("overlay" | "text" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "overlay" | "text" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"overlay" | "text" | U | U_10 | U_11 | U_12, string>;
                    keys: ("overlay" | "text" | U | U_10 | U_11 | U_12)[];
                    __type: "overlay" | "text" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"overlay" | "text" | U | U_10 | U_11, string>;
                classnames: () => Record<"overlay" | "text" | U | U_10 | U_11, string>;
                keys: ("overlay" | "text" | U | U_10 | U_11)[];
                __type: "overlay" | "text" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"overlay" | "text" | U | U_10, string>;
            classnames: () => Record<"overlay" | "text" | U | U_10, string>;
            keys: ("overlay" | "text" | U | U_10)[];
            __type: "overlay" | "text" | U | U_10;
        }, "parts">;
        selectors: () => Record<"overlay" | "text" | U, string>;
        classnames: () => Record<"overlay" | "text" | U, string>;
        keys: ("overlay" | "text" | U)[];
        __type: "overlay" | "text" | U;
    }, "parts">;
    selectors: () => Record<"overlay" | "text", string>;
    classnames: () => Record<"overlay" | "text", string>;
    keys: ("overlay" | "text")[];
    __type: "overlay" | "text";
}, "parts">;
declare const navGroupAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "icon" | "title" | "content" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "icon" | "title" | "content" | U | U_10 | U_11, string>;
                keys: ("container" | "icon" | "title" | "content" | U | U_10 | U_11)[];
                __type: "container" | "icon" | "title" | "content" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "icon" | "title" | "content" | U | U_10, string>;
            classnames: () => Record<"container" | "icon" | "title" | "content" | U | U_10, string>;
            keys: ("container" | "icon" | "title" | "content" | U | U_10)[];
            __type: "container" | "icon" | "title" | "content" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "icon" | "title" | "content" | U, string>;
        classnames: () => Record<"container" | "icon" | "title" | "content" | U, string>;
        keys: ("container" | "icon" | "title" | "content" | U)[];
        __type: "container" | "icon" | "title" | "content" | U;
    }, "parts">;
    selectors: () => Record<"container" | "icon" | "title" | "content", string>;
    classnames: () => Record<"container" | "icon" | "title" | "content", string>;
    keys: ("container" | "icon" | "title" | "content")[];
    __type: "container" | "icon" | "title" | "content";
}, "parts">;
declare const navItemAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12, string>;
                    keys: ("inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12)[];
                    __type: "inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11, string>;
                classnames: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11, string>;
                keys: ("inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11)[];
                __type: "inner" | "icon" | "item" | "link" | "label" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10, string>;
            classnames: () => Record<"inner" | "icon" | "item" | "link" | "label" | U | U_10, string>;
            keys: ("inner" | "icon" | "item" | "link" | "label" | U | U_10)[];
            __type: "inner" | "icon" | "item" | "link" | "label" | U | U_10;
        }, "parts">;
        selectors: () => Record<"inner" | "icon" | "item" | "link" | "label" | U, string>;
        classnames: () => Record<"inner" | "icon" | "item" | "link" | "label" | U, string>;
        keys: ("inner" | "icon" | "item" | "link" | "label" | U)[];
        __type: "inner" | "icon" | "item" | "link" | "label" | U;
    }, "parts">;
    selectors: () => Record<"inner" | "icon" | "item" | "link" | "label", string>;
    classnames: () => Record<"inner" | "icon" | "item" | "link" | "label", string>;
    keys: ("inner" | "icon" | "item" | "link" | "label")[];
    __type: "inner" | "icon" | "item" | "link" | "label";
}, "parts">;
declare const nprogressAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "bar" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "bar" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "bar" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "bar" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "bar" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "bar" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "bar" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "bar" | U | U_10 | U_11, string>;
                keys: ("container" | "bar" | U | U_10 | U_11)[];
                __type: "container" | "bar" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "bar" | U | U_10, string>;
            classnames: () => Record<"container" | "bar" | U | U_10, string>;
            keys: ("container" | "bar" | U | U_10)[];
            __type: "container" | "bar" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "bar" | U, string>;
        classnames: () => Record<"container" | "bar" | U, string>;
        keys: ("container" | "bar" | U)[];
        __type: "container" | "bar" | U;
    }, "parts">;
    selectors: () => Record<"container" | "bar", string>;
    classnames: () => Record<"container" | "bar", string>;
    keys: ("container" | "bar")[];
    __type: "container" | "bar";
}, "parts">;
declare const personaAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11, string>;
                keys: ("container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11)[];
                __type: "container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10, string>;
            classnames: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10, string>;
            keys: ("container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10)[];
            __type: "container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U, string>;
        classnames: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U, string>;
        keys: ("container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U)[];
        __type: "container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel" | U;
    }, "parts">;
    selectors: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel", string>;
    classnames: () => Record<"container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel", string>;
    keys: ("container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel")[];
    __type: "container" | "label" | "details" | "avatar" | "secondaryLabel" | "tertiaryLabel";
}, "parts">;
declare const searchInputAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "input" | "reset" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("input" | "reset" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "input" | "reset" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"input" | "reset" | U | U_10 | U_11 | U_12, string>;
                    keys: ("input" | "reset" | U | U_10 | U_11 | U_12)[];
                    __type: "input" | "reset" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"input" | "reset" | U | U_10 | U_11, string>;
                classnames: () => Record<"input" | "reset" | U | U_10 | U_11, string>;
                keys: ("input" | "reset" | U | U_10 | U_11)[];
                __type: "input" | "reset" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"input" | "reset" | U | U_10, string>;
            classnames: () => Record<"input" | "reset" | U | U_10, string>;
            keys: ("input" | "reset" | U | U_10)[];
            __type: "input" | "reset" | U | U_10;
        }, "parts">;
        selectors: () => Record<"input" | "reset" | U, string>;
        classnames: () => Record<"input" | "reset" | U, string>;
        keys: ("input" | "reset" | U)[];
        __type: "input" | "reset" | U;
    }, "parts">;
    selectors: () => Record<"input" | "reset", string>;
    classnames: () => Record<"input" | "reset", string>;
    keys: ("input" | "reset")[];
    __type: "input" | "reset";
}, "parts">;
declare const sidebarAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11, string>;
                keys: ("container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11)[];
                __type: "container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10, string>;
            classnames: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10, string>;
            keys: ("container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10)[];
            __type: "container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U, string>;
        classnames: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U, string>;
        keys: ("container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U)[];
        __type: "container" | "overlay" | "section" | "toggleWrapper" | "toggle" | U;
    }, "parts">;
    selectors: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle", string>;
    classnames: () => Record<"container" | "overlay" | "section" | "toggleWrapper" | "toggle", string>;
    keys: ("container" | "overlay" | "section" | "toggleWrapper" | "toggle")[];
    __type: "container" | "overlay" | "section" | "toggleWrapper" | "toggle";
}, "parts">;
declare const stepperAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11, string>;
                keys: ("container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11)[];
                __type: "container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10, string>;
            classnames: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10, string>;
            keys: ("container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10)[];
            __type: "container" | "icon" | "title" | "content" | "steps" | "separator" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U, string>;
        classnames: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator" | U, string>;
        keys: ("container" | "icon" | "title" | "content" | "steps" | "separator" | U)[];
        __type: "container" | "icon" | "title" | "content" | "steps" | "separator" | U;
    }, "parts">;
    selectors: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator", string>;
    classnames: () => Record<"container" | "icon" | "title" | "content" | "steps" | "separator", string>;
    keys: ("container" | "icon" | "title" | "content" | "steps" | "separator")[];
    __type: "container" | "icon" | "title" | "content" | "steps" | "separator";
}, "parts">;
declare const structuredListAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12, string>;
                    keys: ("icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12)[];
                    __type: "icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11, string>;
                classnames: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11, string>;
                keys: ("icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11)[];
                __type: "icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10, string>;
            classnames: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10, string>;
            keys: ("icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10)[];
            __type: "icon" | "item" | "list" | "button" | "header" | "cell" | U | U_10;
        }, "parts">;
        selectors: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U, string>;
        classnames: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell" | U, string>;
        keys: ("icon" | "item" | "list" | "button" | "header" | "cell" | U)[];
        __type: "icon" | "item" | "list" | "button" | "header" | "cell" | U;
    }, "parts">;
    selectors: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell", string>;
    classnames: () => Record<"icon" | "item" | "list" | "button" | "header" | "cell", string>;
    keys: ("icon" | "item" | "list" | "button" | "header" | "cell")[];
    __type: "icon" | "item" | "list" | "button" | "header" | "cell";
}, "parts">;
declare const propertyAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "label" | "property" | "value" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"label" | "property" | "value" | U | U_10 | U_11 | U_12, string>;
                    keys: ("label" | "property" | "value" | U | U_10 | U_11 | U_12)[];
                    __type: "label" | "property" | "value" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"label" | "property" | "value" | U | U_10 | U_11, string>;
                classnames: () => Record<"label" | "property" | "value" | U | U_10 | U_11, string>;
                keys: ("label" | "property" | "value" | U | U_10 | U_11)[];
                __type: "label" | "property" | "value" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"label" | "property" | "value" | U | U_10, string>;
            classnames: () => Record<"label" | "property" | "value" | U | U_10, string>;
            keys: ("label" | "property" | "value" | U | U_10)[];
            __type: "label" | "property" | "value" | U | U_10;
        }, "parts">;
        selectors: () => Record<"label" | "property" | "value" | U, string>;
        classnames: () => Record<"label" | "property" | "value" | U, string>;
        keys: ("label" | "property" | "value" | U)[];
        __type: "label" | "property" | "value" | U;
    }, "parts">;
    selectors: () => Record<"label" | "property" | "value", string>;
    classnames: () => Record<"label" | "property" | "value", string>;
    keys: ("label" | "property" | "value")[];
    __type: "label" | "property" | "value";
}, "parts">;
declare const selectAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"addon" | "field" | "element" | U | U_10 | U_11 | U_12, string>;
                    keys: ("addon" | "field" | "element" | U | U_10 | U_11 | U_12)[];
                    __type: "addon" | "field" | "element" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"addon" | "field" | "element" | U | U_10 | U_11, string>;
                classnames: () => Record<"addon" | "field" | "element" | U | U_10 | U_11, string>;
                keys: ("addon" | "field" | "element" | U | U_10 | U_11)[];
                __type: "addon" | "field" | "element" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"addon" | "field" | "element" | U | U_10, string>;
            classnames: () => Record<"addon" | "field" | "element" | U | U_10, string>;
            keys: ("addon" | "field" | "element" | U | U_10)[];
            __type: "addon" | "field" | "element" | U | U_10;
        }, "parts">;
        selectors: () => Record<"addon" | "field" | "element" | U, string>;
        classnames: () => Record<"addon" | "field" | "element" | U, string>;
        keys: ("addon" | "field" | "element" | U)[];
        __type: "addon" | "field" | "element" | U;
    }, "parts">;
    selectors: () => Record<"addon" | "field" | "element", string>;
    classnames: () => Record<"addon" | "field" | "element", string>;
    keys: ("addon" | "field" | "element")[];
    __type: "addon" | "field" | "element";
}, "parts">;
declare const timelineAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11, string>;
                keys: ("container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11)[];
                __type: "container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10, string>;
            classnames: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10, string>;
            keys: ("container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10)[];
            __type: "container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U, string>;
        classnames: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U, string>;
        keys: ("container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U)[];
        __type: "container" | "icon" | "content" | "item" | "separator" | "dot" | "track" | U;
    }, "parts">;
    selectors: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track", string>;
    classnames: () => Record<"container" | "icon" | "content" | "item" | "separator" | "dot" | "track", string>;
    keys: ("container" | "icon" | "content" | "item" | "separator" | "dot" | "track")[];
    __type: "container" | "icon" | "content" | "item" | "separator" | "dot" | "track";
}, "parts">;

export { appShellAnatomy, bannerAnatomy, emptyStateAnatomy, hotkeysAnantomy, loadingOverlayAnatomy, navGroupAnatomy, navItemAnatomy, nprogressAnatomy, personaAnatomy, propertyAnatomy, searchInputAnatomy, selectAnatomy, sidebarAnatomy, stepperAnatomy, structuredListAnatomy, timelineAnatomy };
